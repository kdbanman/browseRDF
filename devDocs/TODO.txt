
==============================================
#TODO list, descending priority, keep it quick
==============================================

- get selection mode to highlight nodes with ColorScale
    - this will mean two different selection modes again.  command line will be the quick and dirty way.
*note: the command line works but it's pretty slow for some reason.  probably because tulip is so busy printing errors
    - the BFS isn't performing, but the color transformation is happening

- namespaced subjects and objects


================================================
#FINISHED, :r !date followed by the task, as cut
================================================


Fri Apr 26 17:22:24 MDT 2013
*note: edge label now work for all sizes


Fri Apr 26 14:20:30 MDT 2013
- get nodes that exist in an already opened window differentiated by color, if possible
    - THIS IS SO CLOSE TO WORKING.  DAMMIT.  THE LIST OF URIS ISN"T GROWING AND SHRINKING AS ONE WOULD ASSUME.
    - this will likely mean a hash-set that is maintained from _parent in the controller module, since we need to test membership of nodes
    - Marek agrees with colorization on new window
*note: implemented with dictionary _parentURIs, mapping URIs to the currently rendered quantity


Wed Apr 24 18:46:39 MDT 2013
- get parent to delete data from closed windows
*note: this is being handled in view.py because it has tulipgui.  silly.


Mon Apr 15 16:59:51 MDT 2013
- figure out why edge labels are incompatible with large documents
*note: large documents no longer attempt edge labels


Mon Apr 15 16:59:22 MDT 2013
- implement the selection/exploration buttons, get selection switching the aggregated boolean property
*note: feature no longer desired


Mon Apr  8 22:07:30 MDT 2013
- migrate comment todos here
*note:  done, son.


Mon Apr  8 22:05:05 MDT 2013
- figure out what happens when a node is discovered in more than one exploration window at once
*note: it just gets displayed.  indicate with color, then highly similar documents are obvious


Mon Apr  8 22:04:10 MDT 2013
- try harder to get sterr logged to a file, errors are good to know
*note: there is just a debug with errors mode now.  'tis great, i've used it.  happy pants


Mon Apr  8 22:03:14 MDT 2013
- get labels displayed
    - size windows larger
    - spread out nodes more - most of the nodes
*note:  things are way prettier now, but things break with edge labels in particular.  tulip has an asssertion error


Mon Apr  8 22:02:51 MDT 2013
- figure out if there is a reasonable way to prevent the user from opening two of the same document at the same time.  there might be a way to make this inherent in the model.  think back.
*note: I'm not going to deal with this.  this is just silly use.  the best thing would be to indicate, by color, that a node exists in another window already.


Tue Apr  2 11:56:38 MDT 2013
- get namespaced uris as labels in tulip graph
    - test namespace manager for normalization in rdflib
    *note: this is too hard to shorten uris arbitrarily, the full uris will have to be used as labels for now.  see namesp.py for evidence
    *doublenote: this is totally practical for shortening the predicates, since rdflib handles them consistently


Thu Mar 28 21:55:37 MDT 2013
- fully update and minimize readme to reflect the new choices
    *note: old devdocs should still be accessible, so made a directory for them


Thu Mar 28 21:30:27 MDT 2013
- reinstall all qt libraries and recompile tulip to try and get rid of the shader error.
    *note: it didn't work.  error persists.


Thu Mar 28 21:30:20 MDT 2013
- test tulip 4 for gui
    *note: IT DOESN'T SUPPORT IT AT ALL


Thu Mar 28 21:26:37 MDT 2013
- get test data files for exploration, ensure all data included properly
    *note: THE URI THAT GIVES THE RDF NAMESPACE WILL BE USED - THAT IS AS RELIABLE AS ANY TEST DATA.  DBPEDIA EINSTEIN SCREWED ME TODAY 


Thu Mar 28 21:26:14 MDT 2013
- get visual differentiation between uris and literals


Thu Mar 28 21:25:32 MDT 2013
- test a simple tulipgui screen to resolve the QGLShader "" error
    *note: THIS WAS JUST MUTED.  IT WAS JUST AN OPENGL ERROR.


Thu Mar 28 21:25:09 MDT 2013
- convert graph membership in triplesToTulip to hash table for speed
    - check to see if there are already tulip member functions that do this


Thu Mar 28 21:24:51 MDT 2013
- figure out why (and explain in contents why i'm testing for newS and newO in triplesToTulip


Tue Mar 19 12:19:17 MDT 2013
- exploration mode flow is currently hanging, I suspect QT is being used wrong.  fix this and test the exploration mode


Mon Mar 18 15:51:17 MDT 2013
- consolidate vocabulary and communication patterns between the two flowcharts and the forming modules.  all the assumptions need to agree before I can progress


Mon Mar 18 15:50:31 MDT 2013
- *flow chart* starting from program initialization, starting from high level of reactions/data flow in m,v,c


Mon Mar 18 15:49:45 MDT 2013
- read about how data moves around in tulip graph, especially with subgraphs
    - especially look for how two separately created graphs with nodes that have identically named/typed properties would integrate


Fri Feb  8 18:30:17 MST 2013
- test code on work computer


Fri Feb  8 19:34:43 MST 2013
- update architecture section of readme with choices in dia diagram, and choices made in code construction so far.
    - uri field in tulip node sent to rdflib to query
    - rdflib retrieves, parses, adds to model, and sends an rdflib Graph()
        - not a tlp.Graph(), the model should be visualization-independent
    - window is created for the new graph, the contents are made pretty
    - the displayed tulip graph is very much a part of the controller, since it is the structure that the user uses to choose queries and update the view
    - user selects node(s), shortest path to aggregate calculated by tulip and they are added to aggregate to maintain single-graph property
    - node selection observer adds to aggregated view
    - upon window close, all unselected nodes and edges are removed from model
        - just leave the unselected triples in the model.  history is important, and we have disk storage natively in rdflib


Fri Feb  8 19:36:51 MST 2013
- describe overall program flow in dia as a flow chart


Mon Mar  4 20:02:15 MST 2013
- split model, view, and controller into separate files as originally intended
