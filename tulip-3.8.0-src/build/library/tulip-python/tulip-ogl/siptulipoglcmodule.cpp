/*
 * Module code.
 *
 * Generated by SIP 4.13.2 on Tue Apr 30 11:12:56 2013
 */

#include "sipAPItulipogl.h"

#line 28 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/WithParameter.sip"
#include <tulip/WithParameter.h>
#include <tulip/ColorScale.h>
#include <tulip/StringCollection.h>
#include <tulip/IntegerProperty.h>
#include <tulip/LayoutProperty.h>
#include <tulip/SizeProperty.h>
#include <tulip/DoubleProperty.h>
#include <tulip/BooleanProperty.h>
#include <tulip/ColorProperty.h>
#line 28 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/WithDependency.sip"
#include <tulip/WithDependency.h>
#line 31 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/PluginProgress.sip"
#include <tulip/PluginProgress.h>
#line 30 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/Observable.sip"
#include <tulip/Observable.h>
#line 26 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 30 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/Color.sip"
#include <tulip/Color.h>
#line 29 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 33 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/Coord.sip"
#include <tulip/Coord.h>
#line 32 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 28 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlSimpleEntity.sip"
#include <libxml/tree.h>
#line 35 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 37 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/../stl/vector.sip"
#include <vector>
#line 38 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 37 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/../stl/vector.sip"
#include <vector>
#line 41 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 41 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/Glyph.sip"
#include <tulip/Glyph.h>
#line 44 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 32 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/Glyph.sip"
#include <tulip/Glyph.h>
#line 47 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 31 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/Size.sip"
#include <tulip/Size.h>
#line 50 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 30 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/BoundingBox.sip"
#include <tulip/BoundingBox.h>
#line 53 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 29 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/../tulip/Node.sip"
#include <tulip/Node.h>
#line 56 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 30 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlSceneVisitor.sip"
#include <tulip/GlSceneVisitor.h>
#line 59 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 30 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlLayer.sip"
#include <tulip/GlLayer.h>
#line 62 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 36 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlSimpleEntity.sip"
#include <tulip/GlSimpleEntity.h>
#line 65 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 41 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlScene.sip"
#include <tulip/GlScene.h>
#line 68 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 9 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlGraphRenderingParameters.sip"
#include <tulip/GlGraphRenderingParameters.h>
#line 71 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 31 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlAbstractPolygon.sip"
#include <tulip/GlAbstractPolygon.h>
#line 74 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 31 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlPolygon.sip"
#include <tulip/GlPolygon.h>
#line 77 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 36 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlComplexPolygon.sip"
#include <tulip/GlComplexPolygon.h>
#line 80 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 30 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlCircle.sip"
#include <tulip/GlCircle.h>
#line 83 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
#line 31 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlRect.sip"
#include <tulip/GlRect.h>
#line 86 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_tulipogl[] = {
    's', 't', 'd', ':', ':', 'v', 'e', 'c', 't', 'o', 'r', '<', 's', 't', 'd', '_', 'p', 'a', 'i', 'r', '_', '0', '1', '0', '0', 's', 't', 'd', '_', 's', 't', 'r', 'i', 'n', 'g', '_', '0', '1', '0', '1', 't', 'l', 'p', '_', 'G', 'l', 'L', 'a', 'y', 'e', 'r', '>', 0,
    's', 't', 'd', ':', ':', 'v', 'e', 'c', 't', 'o', 'r', '<', 's', 't', 'd', '_', 'v', 'e', 'c', 't', 'o', 'r', '_', '0', '1', '0', '0', 't', 'l', 'p', '_', 'C', 'o', 'o', 'r', 'd', '>', 0,
    's', 't', 'd', ':', ':', 'p', 'a', 'i', 'r', '<', 's', 't', 'd', ':', ':', 's', 't', 'r', 'i', 'n', 'g', ',', 't', 'l', 'p', ':', ':', 'G', 'l', 'L', 'a', 'y', 'e', 'r', '*', '>', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'A', 'b', 's', 't', 'r', 'a', 'c', 't', 'P', 'o', 'l', 'y', 'g', 'o', 'n', ':', ':', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'S', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', ':', ':', 'G', 'l', 'S', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'a', 'r', 'g', 'e', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'a', 'r', 'g', 'e', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'o', 'u', 'r', 'c', 'e', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'o', 'u', 'r', 'c', 'e', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'a', 'r', 'g', 'e', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'a', 'r', 'g', 'e', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'o', 'u', 'r', 'c', 'e', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'o', 'u', 'r', 'c', 'e', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'O', 'p', 'e', 'n', 'U', 'n', 'i', 'f', 'o', 'r', 'm', 'B', 's', 'p', 'l', 'i', 'n', 'e', 'P', 'o', 'i', 'n', 't', 's', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'G', 'r', 'a', 'p', 'h', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    's', 'e', 't', 'D', 'e', 'l', 'e', 't', 'e', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 's', 'I', 'n', 'D', 'e', 's', 't', 'r', 'u', 'c', 't', 'o', 'r', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'O', 'p', 'e', 'n', 'U', 'n', 'i', 'f', 'o', 'r', 'm', 'B', 's', 'p', 'l', 'i', 'n', 'e', 'P', 'o', 'i', 'n', 't', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'r', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'r', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 't', 'd', ':', ':', 'v', 'e', 'c', 't', 'o', 'r', '<', 's', 't', 'd', '_', 'v', 'e', 'c', 't', 'o', 'r', '_', '2', '4', '0', '0', '>', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'C', 'o', 'l', 'o', 'r', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'C', 'o', 'l', 'o', 'r', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'g', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'O', 'r', 'd', 'e', 'r', 'i', 'n', 'g', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'O', 'r', 'd', 'e', 'r', 'i', 'n', 'g', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'A', 'n', 'i', 'm', 'a', 't', 'i', 'o', 'n', 'F', 'r', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'A', 'n', 'i', 'm', 'a', 't', 'i', 'o', 'n', 'F', 'r', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'g', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'g', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'r', 'c', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'r', 'c', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'y', 'o', 'u', 't', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'y', 'o', 'u', 't', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'C', 'a', 't', 'm', 'u', 'l', 'l', 'R', 'o', 'm', 'P', 'o', 'i', 'n', 't', 's', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'g', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'g', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'r', 'c', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'r', 'c', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'h', 'a', 'p', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'h', 'a', 'p', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'r', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'r', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'L', 'a', 'b', 'e', 'l', 's', 'A', 'r', 'e', 'B', 'i', 'l', 'l', 'b', 'o', 'a', 'r', 'd', 'e', 'd', 0,
    'g', 'e', 't', 'L', 'a', 'b', 'e', 'l', 's', 'A', 'r', 'e', 'B', 'i', 'l', 'l', 'b', 'o', 'a', 'r', 'd', 'e', 'd', 0,
    's', 'e', 't', 'E', 'd', 'g', 'e', 'C', 'o', 'l', 'o', 'r', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'e', 0,
    'a', 'd', 'd', 'G', 'l', 'G', 'r', 'a', 'p', 'h', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'I', 'n', 'f', 'o', 0,
    'g', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'E', 'd', 'g', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'g', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'i', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'E', 'd', 'g', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'C', 'a', 't', 'm', 'u', 'l', 'l', 'R', 'o', 'm', 'P', 'o', 'i', 'n', 't', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'A', 'b', 's', 't', 'r', 'a', 'c', 't', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 'P', 'r', 'o', 'p', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'E', 'd', 'g', 'e', 'S', 'i', 'z', 'e', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'e', 0,
    'i', 's', 'E', 'd', 'g', 'e', 'C', 'o', 'l', 'o', 'r', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'e', 0,
    'g', 'e', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    's', 'e', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'C', 'o', 'm', 'p', 'l', 'e', 'x', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'R', 'e', 'g', 'u', 'l', 'a', 'r', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 0,
    'g', 'e', 't', 'I', 'n', 'c', 'l', 'u', 'd', 'e', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'A', 'n', 'i', 'm', 'a', 't', 'i', 'o', 'n', 'F', 'r', 'a', 'm', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'g', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'r', 'c', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'h', 'a', 'p', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'r', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'G', 'r', 'a', 'p', 'h', 'I', 'n', 'p', 'u', 't', 'D', 'a', 't', 'a', 0,
    'i', 's', 'E', 'd', 'g', 'e', 'S', 'i', 'z', 'e', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'e', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'O', 'u', 't', 'S', 'c', 'r', 'e', 'e', 'n', 'L', 'a', 'b', 'e', 'l', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'G', 'r', 'a', 'p', 'h', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 0,
    'r', 'e', 'c', 'o', 'm', 'p', 'u', 't', 'e', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'g', 't', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'r', 'c', 'A', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'z', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'r', 'e', 'l', 'o', 'a', 'd', 'L', 'a', 'y', 'o', 'u', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'i', 's', 'V', 'i', 'e', 'w', 'O', 'u', 't', 'S', 'c', 'r', 'e', 'e', 'n', 'L', 'a', 'b', 'e', 'l', 0,
    'g', 'e', 't', 'E', 'd', 'g', 'e', 's', 'L', 'a', 'b', 'e', 'l', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'g', 'e', 't', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'E', 'd', 'g', 'e', 's', 'L', 'a', 'b', 'e', 'l', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'E', 'd', 'g', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'B', 'e', 'z', 'i', 'e', 'r', 'P', 'o', 'i', 'n', 't', 's', 0,
    'b', 'u', 'i', 'l', 'd', 'P', 'a', 's', 'c', 'a', 'l', 'T', 'r', 'i', 'a', 'n', 'g', 'l', 'e', 0,
    's', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'r', 'e', 'l', 'o', 'a', 'd', 'A', 'l', 'l', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'g', 'e', 't', 'P', 'r', 'o', 'j', 'e', 'c', 't', 'i', 'o', 'n', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'g', 'e', 't', 'G', 'l', 'G', 'r', 'a', 'p', 'h', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 0,
    'g', 'e', 't', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'i', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'E', 'd', 'g', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    'i', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'o', 'd', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'S', 'c', 'e', 'n', 'e', 'V', 'i', 's', 'i', 't', 'o', 'r', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'S', 'i', 'm', 'p', 'l', 'e', 'E', 'n', 't', 'i', 't', 'y', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'B', 'e', 'z', 'i', 'e', 'r', 'P', 'o', 'i', 'n', 't', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'P', 'l', 'u', 'g', 'i', 'n', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'g', 'e', 't', 'T', 'e', 'x', 't', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'Z', 'O', 'r', 'd', 'e', 'r', 'e', 'd', 0,
    'g', 'e', 't', 'P', 'r', 'o', 'j', 'A', 'n', 'd', 'M', 'V', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'g', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'g', 'e', 't', 'M', 'o', 'd', 'e', 'l', 'v', 'i', 'e', 'w', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'g', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'r', 0,
    'i', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 0,
    'o', 'b', 's', 'e', 'r', 'v', 'a', 'b', 'l', 'e', 'D', 'e', 'l', 'e', 't', 'e', 'd', 0,
    's', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 'P', 'o', 's', 0,
    'g', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 'P', 'o', 's', 0,
    's', 'e', 't', 'H', 'i', 'd', 'e', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'L', 'o', 'd', 0,
    'g', 'e', 't', 'H', 'i', 'd', 'e', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'L', 'o', 'd', 0,
    'g', 'e', 't', 'G', 'l', 'S', 'i', 'm', 'p', 'l', 'e', 'E', 'n', 't', 'i', 't', 'y', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'S', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'y', 'p', 'h', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'y', 'p', 'h', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'g', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    's', 'e', 't', 'M', 'a', 'x', 'S', 'i', 'z', 'e', 'O', 'f', 'L', 'a', 'b', 'e', 'l', 0,
    'g', 'e', 't', 'M', 'a', 'x', 'S', 'i', 'z', 'e', 'O', 'f', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 'O', 'f', 'L', 'a', 'b', 'e', 'l', 0,
    'g', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 'O', 'f', 'L', 'a', 'b', 'e', 'l', 0,
    'g', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'C', 'o', 'l', 'o', 'r', 0,
    'i', 's', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'Z', 'O', 'r', 'd', 'e', 'r', 'e', 'd', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'O', 'r', 'd', 'e', 'r', 'e', 'd', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'L', 'a', 'y', 'e', 'r', 'P', 'a', 'r', 'e', 'n', 't', 0,
    's', 'e', 't', 'C', 'e', 'n', 't', 'e', 'r', 'A', 'n', 'd', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'S', 'i', 'd', 'e', 's', 0,
    'g', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'S', 'i', 'd', 'e', 's', 0,
    's', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'C', 'o', 'l', 'o', 'r', 's', 0,
    'T', 'L', 'P', '_', 'M', 'O', 'D', 'I', 'F', 'Y', 'E', 'N', 'T', 'I', 'T', 'Y', 0,
    'g', 'l', 'G', 'r', 'a', 'p', 'h', 'I', 'n', 'p', 'u', 't', 'D', 'a', 't', 'a', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'y', 'o', 'u', 't', 0,
    's', 'e', 't', 'L', 'a', 'b', 'e', 'l', 's', 'D', 'e', 'n', 's', 'i', 't', 'y', 0,
    'g', 'e', 't', 'L', 'a', 'b', 'e', 'l', 's', 'D', 'e', 'n', 's', 'i', 't', 'y', 0,
    'i', 's', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'O', 'r', 'd', 'e', 'r', 'e', 'd', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'M', 'e', 't', 'a', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'E', 'd', 'g', 'e', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'N', 'o', 'd', 'e', 'L', 'a', 'b', 'e', 'l', 0,
    'a', 'j', 'u', 's', 't', 'S', 'c', 'e', 'n', 'e', 'T', 'o', 'S', 'i', 'z', 'e', 0,
    'i', 'n', 'i', 't', 'G', 'l', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 0,
    'g', 'e', 't', 'T', 'u', 'l', 'i', 'p', 'R', 'e', 'l', 'e', 'a', 's', 'e', 0,
    's', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'f', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'f', 't', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'L', 'i', 'g', 'h', 't', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'g', 'e', 't', 'L', 'i', 'g', 'h', 't', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'T', 'L', 'P', '_', 'M', 'O', 'D', 'I', 'F', 'Y', 'L', 'A', 'Y', 'E', 'R', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'h', 'a', 'p', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'h', 'a', 'p', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'i', 's', 'V', 'i', 'e', 'w', 'M', 'e', 't', 'a', 'L', 'a', 'b', 'e', 'l', 0,
    'i', 's', 'V', 'i', 'e', 'w', 'E', 'd', 'g', 'e', 'L', 'a', 'b', 'e', 'l', 0,
    'i', 's', 'V', 'i', 'e', 'w', 'N', 'o', 'd', 'e', 'L', 'a', 'b', 'e', 'l', 0,
    's', 'e', 't', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'i', 'n', 'g', 0,
    's', 'e', 't', 'P', 'o', 'i', 'n', 't', 'M', 'o', 'd', 'e', 'L', 'O', 'D', 0,
    'g', 'e', 't', 'P', 'o', 'i', 'n', 't', 'M', 'o', 'd', 'e', 'L', 'O', 'D', 0,
    'w', 'o', 'r', 'l', 'd', 'T', 'o', '2', 'D', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    's', 'c', 'r', 'e', 'e', 'n', 'T', 'o', '3', 'D', 'W', 'o', 'r', 'l', 'd', 0,
    's', 't', 'r', 'a', 'f', 'e', 'L', 'e', 'f', 't', 'R', 'i', 'g', 'h', 't', 0,
    'c', 'l', 'e', 'a', 'r', 'L', 'a', 'y', 'e', 'r', 's', 'L', 'i', 's', 't', 0,
    't', 'r', 'a', 'n', 's', 'l', 'a', 't', 'e', 'C', 'a', 'm', 'e', 'r', 'a', 0,
    'g', 'e', 't', 'E', 'd', 'g', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    'g', 'e', 't', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'E', 'd', 'g', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'N', 'o', 'd', 'e', 's', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'E', 'd', 'g', 'e', 's', 0,
    's', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'o', 'd', 'e', 's', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'Z', 'o', 'o', 'm', 0,
    'g', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'Z', 'o', 'o', 'm', 0,
    'c', 'o', 'm', 'p', 'u', 't', 'e', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 0,
    'c', 'l', 'e', 'a', 'r', 'G', 'e', 'n', 'e', 'r', 'a', 't', 'e', 'd', 0,
    's', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'g', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'N', 'a', 'm', 'e', 0,
    's', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'M', 'o', 'd', 'e', 0,
    'g', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'g', 'e', 't', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'r', 'e', 'g', 'i', 's', 't', 'e', 'r', 'P', 'l', 'u', 'g', 'i', 'n', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'g', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'L', 'a', 'b', 'e', 'l', 'S', 'c', 'a', 'l', 'e', 'd', 0,
    'g', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'a', 't', 'h', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'a', 't', 'h', 0,
    'g', 'e', 't', 'S', 'c', 'e', 'n', 'e', 'R', 'a', 'd', 'i', 'u', 's', 0,
    's', 'e', 't', 'S', 'c', 'e', 'n', 'e', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'i', 'n', 'i', 't', 'P', 'r', 'o', 'j', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'i', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'E', 'd', 'g', 'e', 's', 0,
    'i', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'o', 'd', 'e', 's', 0,
    'n', 'o', 't', 'i', 'f', 'y', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'G', 'l', 'E', 'n', 't', 'i', 't', 'y', 0,
    'a', 'd', 'd', 'L', 'a', 'y', 'e', 'r', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'g', 'e', 't', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    's', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'f', 't', 'P', 'o', 's', 0,
    'g', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'f', 't', 'P', 'o', 's', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'C', 'i', 'r', 'c', 'l', 'e', 0,
    's', 'e', 't', 'S', 't', 'a', 'r', 't', 'A', 'n', 'g', 'l', 'e', 0,
    's', 'e', 't', 'F', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 's', 0,
    'g', 'e', 't', 'T', 'u', 'l', 'i', 'p', 'M', 'i', 'n', 'o', 'r', 0,
    'g', 'e', 't', 'T', 'u', 'l', 'i', 'p', 'M', 'a', 'j', 'o', 'r', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'i', 's', 'L', 'a', 'b', 'e', 'l', 'S', 'c', 'a', 'l', 'e', 'd', 0,
    'i', 's', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'e', 'd', 0,
    'g', 'e', 't', 'Z', 'o', 'o', 'm', 'F', 'a', 'c', 't', 'o', 'r', 0,
    's', 'e', 't', 'Z', 'o', 'o', 'm', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'i', 'n', 'i', 't', 'M', 'o', 'd', 'e', 'l', 'V', 'i', 'e', 'w', 0,
    'g', 'e', 't', 'G', 'r', 'a', 'p', 'h', 'L', 'a', 'y', 'e', 'r', 0,
    'g', 'e', 't', 'L', 'a', 'y', 'e', 'r', 's', 'L', 'i', 's', 't', 0,
    'a', 'c', 'c', 'e', 'p', 't', 'V', 'i', 's', 'i', 't', 'o', 'r', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'C', 'o', 'l', 'o', 'r', 's', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'P', 'o', 'i', 'n', 't', 's', 0,
    's', 'e', 't', 'F', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'F', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'L', 'a', 'y', 'e', 'r', 'N', 'a', 'm', 'e', 0,
    'T', 'L', 'P', '_', 'D', 'E', 'L', 'L', 'A', 'Y', 'E', 'R', 0,
    'T', 'L', 'P', '_', 'A', 'D', 'D', 'L', 'A', 'Y', 'E', 'R', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'h', 'a', 'p', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'F', 'o', 'n', 't', 's', 'P', 'a', 't', 'h', 0,
    's', 'e', 't', 'F', 'o', 'n', 't', 's', 'P', 'a', 't', 'h', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'A', 'r', 'r', 'o', 'w', 0,
    'g', 'e', 't', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'L', 'a', 'y', 'e', 'r', 0,
    's', 't', 'r', 'a', 'f', 'e', 'U', 'p', 'D', 'o', 'w', 'n', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'O', 'r', 't', 'h', 'o', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'S', 'c', 'e', 'n', 'e', 0,
    'g', 'e', 't', 'M', 'e', 't', 'a', 'N', 'o', 'd', 'e', 's', 0,
    'g', 'e', 't', 'I', 'n', 'p', 'u', 't', 'D', 'a', 't', 'a', 0,
    'f', 'i', 'n', 'd', 'G', 'l', 'E', 'n', 't', 'i', 't', 'y', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'P', 'a', 'r', 'e', 'n', 't', 0,
    't', 'r', 'e', 'a', 't', 'E', 'v', 'e', 'n', 't', 's', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'R', 'e', 'c', 't', 0,
    's', 'e', 't', 'F', 'i', 'l', 'l', 'M', 'o', 'd', 'e', 0,
    'g', 'e', 't', 'F', 'i', 'l', 'l', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'L', 'a', 'b', 'e', 'l', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'F', 'o', 'n', 't', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'i', 's', 'V', 'i', 'e', 'w', 'A', 'r', 'r', 'o', 'w', 0,
    't', 'l', 'p', ':', ':', 'C', 'a', 'm', 'e', 'r', 'a', 0,
    'i', 's', 'V', 'i', 'e', 'w', 'O', 'r', 't', 'h', 'o', 0,
    'g', 'e', 't', 'V', 'i', 'e', 'w', 'p', 'o', 'r', 't', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'p', 'o', 'r', 't', 0,
    'r', 'o', 't', 'a', 't', 'e', 'S', 'c', 'e', 'n', 'e', 0,
    'c', 'e', 'n', 't', 'e', 'r', 'S', 'c', 'e', 'n', 'e', 0,
    'a', 'd', 'd', 'G', 'l', 'E', 'n', 't', 'i', 't', 'y', 0,
    't', 'r', 'e', 'a', 't', 'E', 'v', 'e', 'n', 't', 0,
    'g', 'e', 't', 'R', 'e', 'l', 'e', 'a', 's', 'e', 0,
    'Q', 'U', 'A', 'D', '_', 'S', 'T', 'R', 'I', 'P', 0,
    't', 'l', 'p', ':', ':', 'G', 'l', 'y', 'p', 'h', 0,
    'p', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    's', 'e', 't', 'W', 'i', 't', 'h', 'X', 'M', 'L', 0,
    'g', 'e', 't', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'S', 't', 'e', 'n', 'c', 'i', 'l', 0,
    's', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    's', 'e', 'n', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'g', 'e', 't', 'A', 'u', 't', 'h', 'o', 'r', 0,
    's', 'e', 't', 'P', 'o', 'i', 'n', 't', 's', 0,
    'g', 'e', 't', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    's', 'e', 't', 'E', 'd', 'g', 'e', '3', 'D', 0,
    'g', 'e', 't', 'C', 'a', 'm', 'e', 'r', 'a', 0,
    's', 'e', 't', '2', 'D', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'C', 'a', 'm', 'e', 'r', 'a', 0,
    'g', 'e', 't', 'C', 'e', 'n', 't', 'e', 'r', 0,
    's', 'e', 't', 'C', 'e', 'n', 't', 'e', 'r', 0,
    'i', 'n', 'i', 't', 'L', 'i', 'g', 'h', 't', 0,
    't', 'r', 'a', 'n', 's', 'l', 'a', 't', 'e', 0,
    'a', 'd', 'd', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'i', 's', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'g', 'e', 't', 'G', 'r', 'o', 'u', 'p', 0,
    's', 'e', 't', 'P', 'o', 'i', 'n', 't', 0,
    's', 'e', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'g', 'e', 't', 'M', 'i', 'n', 'o', 'r', 0,
    'g', 'e', 't', 'M', 'a', 'j', 'o', 'r', 0,
    'g', 'e', 't', 'G', 'r', 'a', 'p', 'h', 0,
    'i', 's', 'E', 'd', 'g', 'e', '3', 'D', 0,
    'g', 'e', 't', 'S', 'c', 'e', 'n', 'e', 0,
    's', 'e', 't', 'S', 'c', 'e', 'n', 'e', 0,
    'g', 'e', 't', 'L', 'a', 'y', 'e', 'r', 0,
    'a', 'd', 'd', 'L', 'a', 'y', 'e', 'r', 0,
    'g', 'e', 't', 'I', 'm', 'a', 'g', 'e', 0,
    '_', 'x', 'm', 'l', 'N', 'o', 'd', 'e', 0,
    't', 'u', 'l', 'i', 'p', 'o', 'g', 'l', 0,
    'g', 'e', 't', 'I', 'n', 'f', 'o', 0,
    'g', 'e', 't', 'D', 'a', 't', 'e', 0,
    'P', 'O', 'L', 'Y', 'G', 'O', 'N', 0,
    'g', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'g', 'e', 't', 'E', 'y', 'e', 's', 0,
    's', 'e', 't', 'E', 'y', 'e', 's', 0,
    'f', 'i', 'n', 'd', 'K', 'e', 'y', 0,
    'i', 'n', 'R', 'e', 'c', 't', 0,
    'i', 'n', 'i', 't', 'G', 'l', 0,
    'r', 'o', 't', 'a', 't', 'e', 0,
    'z', 'o', 'o', 'm', 'X', 'Y', 0,
    'g', 'e', 't', 'X', 'M', 'L', 0,
    'g', 'e', 't', 'I', 'd', 0,
    'c', 'l', 'e', 'a', 'r', 0,
    'g', 'e', 't', 'U', 'p', 0,
    's', 'e', 't', 'U', 'p', 0,
    'g', 'r', 'a', 'p', 'h', 0,
    'r', 'e', 's', 'e', 't', 0,
    'v', 'i', 's', 'i', 't', 0,
    'i', 's', '3', 'D', 0,
    'm', 'o', 'v', 'e', 0,
    'z', 'o', 'o', 'm', 0,
    'd', 'r', 'a', 'w', 0,
    't', 'l', 'p', 0,
};

void sipVH_tulipogl_0(sip_gilstate_t sipGILState,PyObject *sipMethod,const tlp::Color& a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new tlp::Color(a0),sipType_tlp_Color,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_1(sip_gilstate_t sipGILState,PyObject *sipMethod,const tlp::Coord& a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new tlp::Coord(a0),sipType_tlp_Coord,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

tlp::Color sipVH_tulipogl_2(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    tlp::Color sipRes;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H5",sipType_tlp_Color,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

tlp::Coord sipVH_tulipogl_3(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    tlp::Coord sipRes;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H5",sipType_tlp_Coord,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_tulipogl_4(sip_gilstate_t sipGILState,PyObject *sipMethod,_xmlNode *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType__xmlNode,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_5(sip_gilstate_t sipGILState,PyObject *sipMethod,float a0,tlp::Camera *a1)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"fD",a0,a1,sipType_tlp_Camera,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_6(sip_gilstate_t sipGILState,PyObject *sipMethod,const uint a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"u",a0);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_7(sip_gilstate_t sipGILState,PyObject *sipMethod,const std::vector<tlp::Color>& a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new std::vector<tlp::Color>(a0),sipType_std_vector_0100tlp_Color,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_8(sip_gilstate_t sipGILState,PyObject *sipMethod,uint a0,const tlp::Coord& a1)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"uN",a0,new tlp::Coord(a1),sipType_tlp_Coord,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_9(sip_gilstate_t sipGILState,PyObject *sipMethod,const std::vector<tlp::Coord>& a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new std::vector<tlp::Coord>(a0),sipType_std_vector_0100tlp_Coord,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

int sipVH_tulipogl_10(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"i",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

tlp::Glyph * sipVH_tulipogl_11(sip_gilstate_t sipGILState,PyObject *sipMethod,tlp::GlyphContext *a0)
{
    tlp::Glyph * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_tlp_GlyphContext,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H2",sipType_tlp_Glyph,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

tlp::Coord sipVH_tulipogl_12(sip_gilstate_t sipGILState,PyObject *sipMethod,const tlp::Coord& a0,const tlp::Coord& a1,const tlp::Size& a2,const double a3)
{
    tlp::Coord sipRes;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NNNd",new tlp::Coord(a0),sipType_tlp_Coord,NULL,new tlp::Coord(a1),sipType_tlp_Coord,NULL,new tlp::Size(a2),sipType_tlp_Size,NULL,a3);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H5",sipType_tlp_Coord,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_tulipogl_13(sip_gilstate_t sipGILState,PyObject *sipMethod,tlp::BoundingBox& a0,tlp::node a1)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"DN",&a0,sipType_tlp_BoundingBox,NULL,new tlp::node(a1),sipType_tlp_node,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_14(sip_gilstate_t sipGILState,PyObject *sipMethod,tlp::node a0,float a1)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"Nf",new tlp::node(a0),sipType_tlp_node,NULL,a1);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_15(sip_gilstate_t sipGILState,PyObject *sipMethod,tlp::GlSceneVisitor *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_tlp_GlSceneVisitor,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_16(sip_gilstate_t sipGILState,PyObject *sipMethod,tlp::GlLayer *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_tlp_GlLayer,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_tulipogl_17(sip_gilstate_t sipGILState,PyObject *sipMethod,tlp::GlSimpleEntity *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_tlp_GlSimpleEntity,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

tlp::BoundingBox sipVH_tulipogl_18(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    tlp::BoundingBox sipRes;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H5",sipType_tlp_BoundingBox,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_tlp_GlSceneEvent(void **);}
static const sipTypeDef *sipSubClass_tlp_GlSceneEvent(void **sipCppRet)
{
    tlp::Event *sipCpp = reinterpret_cast<tlp::Event *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 34 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/GlSceneObserver.sip"
   if (dynamic_cast<tlp::GlSceneEvent*>(sipCpp)) {
        sipType = sipType_tlp_GlSceneEvent;
   } else {
        sipType = NULL;
    }
#line 733 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"

    return sipType;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_tlp__GlAbstractPolygon__PolygonMode, {0}}, sipNameNr_PolygonMode, 7, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_tlp__GlSceneEvent__GlSceneEventType, {0}}, sipNameNr_GlSceneEventType, 20, NULL},
};


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef_tulipogl__xmlNode.ctd_base,
    &sipTypeDef_tulipogl_std_pair_0100std_string_0101tlp_GlLayer.mtd_base,
    &sipTypeDef_tulipogl_std_vector_0100std_pair_0100std_string_0101tlp_GlLayer.mtd_base,
    &sipTypeDef_tulipogl_std_vector_0100std_vector_0100tlp_Coord.mtd_base,
    &sipTypeDef_tulipogl_std_vector_0100std_vector_2400.mtd_base,
    &sipTypeDef_tulipogl_tlp.ctd_base,
    &sipTypeDef_tulipogl_tlp_Camera.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlAbstractPolygon.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef_tulipogl_tlp_GlCircle.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlComplexPolygon.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlComposite.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlGraphComposite.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlGraphInputData.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlGraphRenderingParameters.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlLayer.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlPolygon.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlRect.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlRegularPolygon.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlScene.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlSceneEvent.ctd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef_tulipogl_tlp_GlSceneVisitor.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlSimpleEntity.ctd_base,
    &sipTypeDef_tulipogl_tlp_Glyph.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlyphContext.ctd_base,
    &sipTypeDef_tulipogl_tlp_GlyphFactory.ctd_base,
};


/*
 * These define each typedef in this module.
 */
static sipTypedefDef typedefsTable[] = {
    {"std_pair_0100std_string_0101tlp_GlLayer", "std::pair<std::string,tlp::GlLayer *>"},
    {"std_vector_0100tlp_Coord", "std::vector<tlp::Coord>"},
    {"std_vector_2400", "std::vector<double>"},
};


/*
 * This defines the virtual handlers that this module implements and can be
 * used by other modules.
 */
static sipVirtHandlerFunc virtHandlersTable[] = {
    (sipVirtHandlerFunc)sipVH_tulipogl_0,
    (sipVirtHandlerFunc)sipVH_tulipogl_1,
    (sipVirtHandlerFunc)sipVH_tulipogl_2,
    (sipVirtHandlerFunc)sipVH_tulipogl_3,
    (sipVirtHandlerFunc)sipVH_tulipogl_4,
    (sipVirtHandlerFunc)sipVH_tulipogl_5,
    (sipVirtHandlerFunc)sipVH_tulipogl_6,
    (sipVirtHandlerFunc)sipVH_tulipogl_7,
    (sipVirtHandlerFunc)sipVH_tulipogl_8,
    (sipVirtHandlerFunc)sipVH_tulipogl_9,
    (sipVirtHandlerFunc)sipVH_tulipogl_10,
    (sipVirtHandlerFunc)sipVH_tulipogl_11,
    (sipVirtHandlerFunc)sipVH_tulipogl_12,
    (sipVirtHandlerFunc)sipVH_tulipogl_13,
    (sipVirtHandlerFunc)sipVH_tulipogl_14,
    (sipVirtHandlerFunc)sipVH_tulipogl_15,
    (sipVirtHandlerFunc)sipVH_tulipogl_16,
    (sipVirtHandlerFunc)sipVH_tulipogl_17,
    (sipVirtHandlerFunc)sipVH_tulipogl_18,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"stl", -1, NULL},
    {"tulip", -1, NULL},
    {NULL, -1, NULL}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_tlp_GlSceneEvent, {51, 1, 0}, NULL},
    {NULL, {0, 0, 0}, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_tulipogl = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_tulipogl,
    0,
    -1,
    sipStrings_tulipogl,
    importsTable,
    NULL,
    27,
    typesTable,
    NULL,
    0,
    NULL,
    3,
    typedefsTable,
    virtHandlersTable,
    convertorsTable,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_tulipogl;
const sipExportedModuleDef *sipModuleAPI_tulipogl_stl;
const sipExportedModuleDef *sipModuleAPI_tulipogl_tulip;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_tulipogl
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        inittulipogl
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "tulipogl",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

#line 32 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/tulip-ogl/Module.sip"
    std::string tlpImportHook =
    "try:\n"
    "   _origimportfunc\n"
    "except NameError:\n"
    "   import sys\n"
#if PY_MAJOR_VERSION >= 3
    "   import builtins\n"
    "   _origimportfunc = builtins.__import__\n"
#else
    "   import __builtin__\n"
    "   _origimportfunc = __builtin__.__import__\n"
#endif
    "   def tlpimporthook(name, globals={}, locals={}, fromlist=[], level=-1):\n"
    "       fullname = name\n"
    "       m = _origimportfunc(name, globals, locals, fromlist, level)\n"
    "       if fullname.startswith(\"tulip\"):\n"
    "           if fromlist and len(fromlist) > 0 and fromlist[0] == \"*\":\n"
    "               curTlpDict = None\n"
    "               if \"tlp\" in locals:\n"
    "                   curTlpDict = locals[\"tlp\"].__dict__\n"
    "                   if curTlpDict:\n"
    "                       m = type(fullname, (object,), dict(m.__dict__))\n"
    "                       m.tlp = type(\"tlp\", (object,), dict(m.tlp.__dict__))\n"
    "                       for k in curTlpDict.keys():\n"
    "                           if not k.startswith(\"_\"):\n"
    "                               setattr(m.tlp, k, curTlpDict[k])\n"
    "       return m\n"
#if PY_MAJOR_VERSION >= 3
    "   builtins.__import__ = tlpimporthook\n"
#else
    "   __builtin__.__import__ = tlpimporthook\n"
#endif
     ;

    PyRun_SimpleString(tlpImportHook.c_str());
#line 942 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/tulip-ogl/siptulipoglcmodule.cpp"
    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_tulipogl, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_tulipogl), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule(SIP_MODULE_NAME);
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>(SIP_MODULE_NAME));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == NULL || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_tulipogl = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, SIP_MODULE_NAME "._C_API"));
#else
    sipAPI_tulipogl = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_tulipogl == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_tulipogl,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }
    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_tulipogl,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI_tulipogl_stl = sipModuleAPI_tulipogl.em_imports[0].im_module;
    sipModuleAPI_tulipogl_tulip = sipModuleAPI_tulipogl.em_imports[1].im_module;

    SIP_MODULE_RETURN(sipModule);
}
