tulip.tlp.EDGE_TYPE?10
tulip.tlp.DIRECTED?10
tulip.tlp.INV_DIRECTED?10
tulip.tlp.UNDIRECTED?10
tulip.tlp.ElementType?10
tulip.tlp.NODE?10
tulip.tlp.EDGE?10
tulip.tlp.ProgressState?10
tulip.tlp.TLP_CONTINUE?10
tulip.tlp.TLP_CANCEL?10
tulip.tlp.TLP_STOP?10
tulip.tlp.TulipBitmapDir?7
tulip.tlp.TulipDocProfile?7
tulip.tlp.TulipLibDir?7
tulip.tlp.TulipPluginsPath?7
tulip.tlp.TulipUserHandBookIndex?7
tulip.tlp.nextFaceEdge?4(tlp.Graph, tlp.edge, tlp.node) -> tlp.edge
tulip.tlp.newGraph?4() -> tlp.Graph
tulip.tlp.loadGraph?4(string) -> tlp.Graph
tulip.tlp.saveGraph?4(tlp.Graph, string) -> bool
tulip.tlp.importGraph?4(string, tlp.DataSet dataSet=tlp.DataSet()) -> tlp.Graph
tulip.tlp.importGraph?4(string, tlp.DataSet, tlp.Graph) -> tlp.Graph
tulip.tlp.exportGraph?4(tlp.Graph, string, string, tlp.DataSet dataSet=tlp.DataSet()) -> bool
tulip.tlp.applyAlgorithm?4(tlp.Graph, tlp.DataSet, string) -> (bool, string)
tulip.tlp.newSubGraph?4(tlp.Graph, string name="unnamed") -> tlp.Graph
tulip.tlp.newCloneSubGraph?4(tlp.Graph, string name="unnamed") -> tlp.Graph
tulip.tlp.getSource?4(tlp.Graph) -> (bool, tlp.node)
tulip.tlp.copyToGraph?4(tlp.Graph, tlp.Graph, tlp.BooleanProperty inSelection=None, tlp.BooleanProperty outSelection=None)
tulip.tlp.removeFromGraph?4(tlp.Graph, tlp.BooleanProperty inSelection=None)
tulip.tlp.averagePathLength?4(tlp.Graph, tlp.PluginProgress pluginProgress=None) -> float
tulip.tlp.averageClusteringCoefficient?4(tlp.Graph, tlp.PluginProgress pluginProgress=None) -> float
tulip.tlp.clusteringCoefficient?4(tlp.Graph, tlp.DoubleProperty, int maxDepth=1, tlp.PluginProgress=None)
tulip.tlp.dagLevel?4(tlp.Graph, tlp.IntegerProperty, tlp.PluginProgress=None)
tulip.tlp.maxDegree?4(tlp.Graph) -> int
tulip.tlp.minDegree?4(tlp.Graph) -> int
tulip.tlp.maxDistance?4(tlp.Graph, tlp.node, tlp.IntegerProperty, tlp.EDGE_TYPE direction=tlp.UNDIRECTED) -> int
tulip.tlp.reachableNodes?4(tlp.Graph, tlp.node, int, tlp.EDGE_TYPE direction=tlp.UNDIRECTED) -> list-of-tlp.node
tulip.tlp.getTulipRelease?4() -> string
tulip.tlp.initTulipLib?4(string appDirPath="")
tulip.tlp.loadPlugins?4(tlp.PluginLoader plug=None)
tulip.tlp.loadPlugin?4(string, tlp.PluginLoader plug=None) -> bool
tulip.tlp.loadPluginsFromDir?4(string, string type="Algorithm", tlp.PluginLoader loader=None)
tulip.tlp.loadPluginsCheckDependencies?4(tlp.PluginLoader loader=None)
tulip.tlp.getDefaultPluginParameters?4(string, tlp.Graph graph=None) -> tlp.DataSet
tulip.tlp.getAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getImportPluginsList?4() -> list-of-std.string
tulip.tlp.getExportPluginsList?4() -> list-of-std.string
tulip.tlp.getBooleanAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getIntegerAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getDoubleAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getColorAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getLayoutAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getSizeAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.getStringAlgorithmPluginsList?4() -> list-of-std.string
tulip.tlp.computeBoundingBox?4(tlp.Graph, tlp.BooleanProperty selection=None) -> tlp.BoundingBox
tulip.tlp.computeBoundingBox?4(tlp.Graph, tlp.LayoutProperty, tlp.SizeProperty, tlp.DoubleProperty, tlp.BooleanProperty selection=None) -> tlp.BoundingBox
tulip.tlp.computeBoundingRadius?4(tlp.Graph, tlp.BooleanProperty selection=None) -> (tlp.Coord, tlp.Coord)
tulip.tlp.computeBoundingRadius?4(tlp.Graph, tlp.LayoutProperty, tlp.SizeProperty, tlp.DoubleProperty, tlp.BooleanProperty selection=None) -> (tlp.Coord, tlp.Coord)
tulip.tlp.computeConvexHull?4(list-of-tlp.Coord) -> list-of-tlp.Coord
tulip.tlp.computeConvexHull?4(tlp.Graph, tlp.BooleanProperty selection=None) -> list-of-tlp.Coord
tulip.tlp.computeConvexHull?4(tlp.Graph, tlp.LayoutProperty, tlp.SizeProperty, tlp.DoubleProperty, tlp.BooleanProperty selection=None) -> list-of-tlp.Coord
tulip.tlp.computeLinesIntersection?4((tlp.Coord, tlp.Coord), (tlp.Coord, tlp.Coord)) -> (bool, tlp.Coord)
tulip.tlp.computePolygonCentroid?4(list-of-tlp.Coord) -> tlp.Coord
tulip.tlp.delaunayTriangulation?4(list-of-tlp.Coord) -> (std_vector_0100std_pair_1900_1900, std_vector_0100std_vector_1900)
tulip.tlp.voronoiDiagram?4(list-of-tlp.Coord) -> tlp.VoronoiDiagram
tulip.tlp.IteratorNode?1()
tulip.tlp.IteratorNode.__init__?1(self)
tulip.tlp.IteratorNode?1(tlp.IteratorNode)
tulip.tlp.IteratorNode.__init__?1(self, tlp.IteratorNode)
tulip.tlp.IteratorNode.next?4() -> tlp.node
tulip.tlp.IteratorNode.hasNext?4() -> bool
tulip.tlp.IteratorEdge?1()
tulip.tlp.IteratorEdge.__init__?1(self)
tulip.tlp.IteratorEdge?1(tlp.IteratorEdge)
tulip.tlp.IteratorEdge.__init__?1(self, tlp.IteratorEdge)
tulip.tlp.IteratorEdge.next?4() -> tlp.edge
tulip.tlp.IteratorEdge.hasNext?4() -> bool
tulip.tlp.NodeMapIterator?1(tlp.Graph, tlp.node, tlp.node)
tulip.tlp.NodeMapIterator.__init__?1(self, tlp.Graph, tlp.node, tlp.node)
tulip.tlp.NodeMapIterator?1(tlp.NodeMapIterator)
tulip.tlp.NodeMapIterator.__init__?1(self, tlp.NodeMapIterator)
tulip.tlp.EdgeMapIterator?1(tlp.Graph, tlp.edge, tlp.node)
tulip.tlp.EdgeMapIterator.__init__?1(self, tlp.Graph, tlp.edge, tlp.node)
tulip.tlp.EdgeMapIterator?1(tlp.EdgeMapIterator)
tulip.tlp.EdgeMapIterator.__init__?1(self, tlp.EdgeMapIterator)
tulip.tlp.node.id?7
tulip.tlp.node?1()
tulip.tlp.node.__init__?1(self)
tulip.tlp.node?1(int)
tulip.tlp.node.__init__?1(self, int)
tulip.tlp.node?1(tlp.node)
tulip.tlp.node.__init__?1(self, tlp.node)
tulip.tlp.node.isValid?4() -> bool
tulip.tlp.edge.id?7
tulip.tlp.edge?1()
tulip.tlp.edge.__init__?1(self)
tulip.tlp.edge?1(int)
tulip.tlp.edge.__init__?1(self, int)
tulip.tlp.edge?1(tlp.edge)
tulip.tlp.edge.__init__?1(self, tlp.edge)
tulip.tlp.edge.isValid?4() -> bool
tulip.tlp.Vec3f?1()
tulip.tlp.Vec3f.__init__?1(self)
tulip.tlp.Vec3f?1(float)
tulip.tlp.Vec3f.__init__?1(self, float)
tulip.tlp.Vec3f?1(float, float, float)
tulip.tlp.Vec3f.__init__?1(self, float, float, float)
tulip.tlp.Vec3f?1(tlp.Vec3f)
tulip.tlp.Vec3f.__init__?1(self, tlp.Vec3f)
tulip.tlp.Vec3f.fill?4(float) -> tlp.Vec3f
tulip.tlp.Vec3f.norm?4() -> float
tulip.tlp.Vec3f.dist?4(tlp.Vec3f) -> float
tulip.tlp.Vec3f.dotProduct?4(tlp.Vec3f) -> float
tulip.tlp.Vec4f?1()
tulip.tlp.Vec4f.__init__?1(self)
tulip.tlp.Vec4f?1(float)
tulip.tlp.Vec4f.__init__?1(self, float)
tulip.tlp.Vec4f?1(float, float, float, float)
tulip.tlp.Vec4f.__init__?1(self, float, float, float, float)
tulip.tlp.Vec4f?1(tlp.Vec4f)
tulip.tlp.Vec4f.__init__?1(self, tlp.Vec4f)
tulip.tlp.Vec4f.fill?4(float) -> tlp.Vec4f
tulip.tlp.Vec4f.norm?4() -> float
tulip.tlp.Vec4f.dist?4(tlp.Vec4f) -> float
tulip.tlp.Vec4f.dotProduct?4(tlp.Vec4f) -> float
tulip.tlp.Vec4i?1()
tulip.tlp.Vec4i.__init__?1(self)
tulip.tlp.Vec4i?1(int)
tulip.tlp.Vec4i.__init__?1(self, int)
tulip.tlp.Vec4i?1(int, int, int, int)
tulip.tlp.Vec4i.__init__?1(self, int, int, int, int)
tulip.tlp.Vec4i?1(tlp.Vec4i)
tulip.tlp.Vec4i.__init__?1(self, tlp.Vec4i)
tulip.tlp.Vec4i.fill?4(int) -> tlp.Vec4i
tulip.tlp.Color?1(int red=0, int green=0, int blue=0, int alpha=255)
tulip.tlp.Color.__init__?1(self, int red=0, int green=0, int blue=0, int alpha=255)
tulip.tlp.Color?1(tlp.Color)
tulip.tlp.Color.__init__?1(self, tlp.Color)
tulip.tlp.Color.set?4(int red=0, int green=0, int blue=0, int alpha=255)
tulip.tlp.Color.getRGL?4() -> float
tulip.tlp.Color.getGGL?4() -> float
tulip.tlp.Color.getBGL?4() -> float
tulip.tlp.Color.getAGL?4() -> float
tulip.tlp.Color.getR?4() -> int
tulip.tlp.Color.getG?4() -> int
tulip.tlp.Color.getB?4() -> int
tulip.tlp.Color.getA?4() -> int
tulip.tlp.Color.setR?4(int)
tulip.tlp.Color.setG?4(int)
tulip.tlp.Color.setB?4(int)
tulip.tlp.Color.setA?4(int)
tulip.tlp.Color.getH?4() -> int
tulip.tlp.Color.getS?4() -> int
tulip.tlp.Color.getV?4() -> int
tulip.tlp.Color.setH?4(int)
tulip.tlp.Color.setS?4(int)
tulip.tlp.Color.setV?4(int)
tulip.tlp.Coord?1()
tulip.tlp.Coord.__init__?1(self)
tulip.tlp.Coord?1(float)
tulip.tlp.Coord.__init__?1(self, float)
tulip.tlp.Coord?1(float, float, float a2=0)
tulip.tlp.Coord.__init__?1(self, float, float, float a2=0)
tulip.tlp.Coord?1(tlp.Coord)
tulip.tlp.Coord.__init__?1(self, tlp.Coord)
tulip.tlp.Coord?1(tlp.Vec3f)
tulip.tlp.Coord.__init__?1(self, tlp.Vec3f)
tulip.tlp.Coord.set?4(float x=0, float y=0, float z=0)
tulip.tlp.Coord.set?4(tlp.Coord)
tulip.tlp.Coord.setX?4(float)
tulip.tlp.Coord.setY?4(float)
tulip.tlp.Coord.setZ?4(float)
tulip.tlp.Coord.getX?4() -> float
tulip.tlp.Coord.getY?4() -> float
tulip.tlp.Coord.getZ?4() -> float
tulip.tlp.Coord.get?4() -> (float, float, float)
tulip.tlp.Size?1(float)
tulip.tlp.Size.__init__?1(self, float)
tulip.tlp.Size?1(float width=0, float height=0, float depth=0)
tulip.tlp.Size.__init__?1(self, float width=0, float height=0, float depth=0)
tulip.tlp.Size?1(tlp.Size)
tulip.tlp.Size.__init__?1(self, tlp.Size)
tulip.tlp.Size?1(tlp.Vec3f)
tulip.tlp.Size.__init__?1(self, tlp.Vec3f)
tulip.tlp.Size.set?4(float width=0, float height=0, float depth=0)
tulip.tlp.Size.set?4(tlp.Size)
tulip.tlp.Size.setW?4(float)
tulip.tlp.Size.setH?4(float)
tulip.tlp.Size.setD?4(float)
tulip.tlp.Size.getW?4() -> float
tulip.tlp.Size.getH?4() -> float
tulip.tlp.Size.getD?4() -> float
tulip.tlp.Size.get?4() -> (float, float, float)
tulip.tlp.Mat3f?1()
tulip.tlp.Mat3f.__init__?1(self)
tulip.tlp.Mat3f?1(tlp.Mat3f)
tulip.tlp.Mat3f.__init__?1(self, tlp.Mat3f)
tulip.tlp.Mat3f.fill?4(float) -> tlp.Mat3f
tulip.tlp.Mat3f.determinant?4() -> float
tulip.tlp.Mat3f.transpose?4() -> tlp.Mat3f
tulip.tlp.Mat3f.inverse?4() -> tlp.Mat3f
tulip.tlp.Mat3f.cofactor?4() -> tlp.Mat3f
tulip.tlp.Mat3f.powerIteration?4(int) -> tlp.Vec3f
tulip.tlp.Mat4f?1()
tulip.tlp.Mat4f.__init__?1(self)
tulip.tlp.Mat4f?1(tlp.Mat4f)
tulip.tlp.Mat4f.__init__?1(self, tlp.Mat4f)
tulip.tlp.Mat4f.fill?4(float) -> tlp.Mat4f
tulip.tlp.Mat4f.determinant?4() -> float
tulip.tlp.Mat4f.transpose?4() -> tlp.Mat4f
tulip.tlp.Mat4f.inverse?4() -> tlp.Mat4f
tulip.tlp.Mat4f.cofactor?4() -> tlp.Mat4f
tulip.tlp.Mat4f.powerIteration?4(int) -> tlp.Vec4f
tulip.tlp.BoundingBox?1()
tulip.tlp.BoundingBox.__init__?1(self)
tulip.tlp.BoundingBox?1(tlp.Vec3f, tlp.Vec3f)
tulip.tlp.BoundingBox.__init__?1(self, tlp.Vec3f, tlp.Vec3f)
tulip.tlp.BoundingBox?1(tlp.BoundingBox)
tulip.tlp.BoundingBox.__init__?1(self, tlp.BoundingBox)
tulip.tlp.BoundingBox.center?4() -> tlp.Vec3f
tulip.tlp.BoundingBox.width?4() -> float
tulip.tlp.BoundingBox.height?4() -> float
tulip.tlp.BoundingBox.depth?4() -> float
tulip.tlp.BoundingBox.expand?4(tlp.Vec3f)
tulip.tlp.BoundingBox.translate?4(tlp.Vec3f)
tulip.tlp.BoundingBox.isValid?4() -> bool
tulip.tlp.BoundingBox.contains?4(tlp.Vec3f) -> bool
tulip.tlp.BoundingBox.intersect?4(tlp.BoundingBox) -> bool
tulip.tlp.BoundingBox.intersect?4(tlp.Vec3f, tlp.Vec3f) -> bool
tulip.tlp.StringCollection?1()
tulip.tlp.StringCollection.__init__?1(self)
tulip.tlp.StringCollection?1(list-of-std.string)
tulip.tlp.StringCollection.__init__?1(self, list-of-std.string)
tulip.tlp.StringCollection?1(string)
tulip.tlp.StringCollection.__init__?1(self, string)
tulip.tlp.StringCollection?1(list-of-std.string, int)
tulip.tlp.StringCollection.__init__?1(self, list-of-std.string, int)
tulip.tlp.StringCollection?1(list-of-std.string, string)
tulip.tlp.StringCollection.__init__?1(self, list-of-std.string, string)
tulip.tlp.StringCollection?1(tlp.StringCollection)
tulip.tlp.StringCollection.__init__?1(self, tlp.StringCollection)
tulip.tlp.StringCollection.getCurrentString?4() -> string
tulip.tlp.StringCollection.setCurrent?4(int) -> bool
tulip.tlp.StringCollection.setCurrent?4(string) -> bool
tulip.tlp.StringCollection.getCurrent?4() -> int
tulip.tlp.StringCollection.push_back?4(string)
tulip.tlp.StringCollection.empty?4() -> bool
tulip.tlp.StringCollection.at?4(int) -> string
tulip.tlp.StringCollection.size?4() -> int
tulip.tlp.ColorScale?1(bool gradient=True)
tulip.tlp.ColorScale.__init__?1(self, bool gradient=True)
tulip.tlp.ColorScale?1(list-of-tlp.Color, bool gradient=True)
tulip.tlp.ColorScale.__init__?1(self, list-of-tlp.Color, bool gradient=True)
tulip.tlp.ColorScale?1(tlp.ColorScale)
tulip.tlp.ColorScale.__init__?1(self, tlp.ColorScale)
tulip.tlp.ColorScale.setColorScale?4(list-of-tlp.Color, bool gradient=True)
tulip.tlp.ColorScale.setColorAtPos?4(float, tlp.Color)
tulip.tlp.ColorScale.getColorAtPos?4(float) -> tlp.Color
tulip.tlp.ColorScale.isGradient?4() -> bool
tulip.tlp.ColorScale.getColorMap?4() -> dict-of-float-tlp.Color
tulip.tlp.DataSet?1()
tulip.tlp.DataSet.__init__?1(self)
tulip.tlp.DataSet?1(tlp.DataSet)
tulip.tlp.DataSet.__init__?1(self, tlp.DataSet)
tulip.tlp.DataSet.exist?4(string) -> bool
tulip.tlp.DataSet.remove?4(string)
tulip.tlp.DataSet.size?4() -> int
tulip.tlp.DataSet.getKeys?4() -> list-of-std.string
tulip.tlp.AlgorithmContext.dataSet?7
tulip.tlp.AlgorithmContext.graph?7
tulip.tlp.AlgorithmContext.pluginProgress?7
tulip.tlp.AlgorithmContext?1()
tulip.tlp.AlgorithmContext.__init__?1(self)
tulip.tlp.AlgorithmContext?1(tlp.AlgorithmContext)
tulip.tlp.AlgorithmContext.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.WithParameter?1()
tulip.tlp.WithParameter.__init__?1(self)
tulip.tlp.WithParameter?1(tlp.WithParameter)
tulip.tlp.WithParameter.__init__?1(self, tlp.WithParameter)
tulip.tlp.WithParameter.addStringParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addStringCollectionParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addIntegerParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addFloatParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addBooleanParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addDoublePropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addIntegerPropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addLayoutPropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addSizePropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addColorPropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addBooleanPropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addStringPropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addColorParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addColorScaleParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithParameter.addPropertyParameter?4(string, string inHelp="", string inDefValue="", bool isMandatory=True)
tulip.tlp.WithDependency?1()
tulip.tlp.WithDependency.__init__?1(self)
tulip.tlp.WithDependency?1(tlp.WithDependency)
tulip.tlp.WithDependency.__init__?1(self, tlp.WithDependency)
tulip.tlp.WithDependency.getDependencies?4() -> list-of-tlp.Dependency
tulip.tlp.WithDependency.addBooleanAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addColorAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addDoubleAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addIntegerAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addLayoutAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addSizeAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addStringAlgorithmDependency?4(string, string)
tulip.tlp.WithDependency.addAlgorithmDependency?4(string, string)
tulip.tlp.Algorithm.dataSet?7
tulip.tlp.Algorithm.graph?7
tulip.tlp.Algorithm.pluginProgress?7
tulip.tlp.Algorithm?1(tlp.AlgorithmContext)
tulip.tlp.Algorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.Algorithm?1(tlp.Algorithm)
tulip.tlp.Algorithm.__init__?1(self, tlp.Algorithm)
tulip.tlp.Algorithm.run?4() -> bool
tulip.tlp.Algorithm.check?4() -> (bool, string)
tulip.tlp.PluginInfoInterface?1()
tulip.tlp.PluginInfoInterface.__init__?1(self)
tulip.tlp.PluginInfoInterface?1(tlp.PluginInfoInterface)
tulip.tlp.PluginInfoInterface.__init__?1(self, tlp.PluginInfoInterface)
tulip.tlp.PluginInfoInterface.getName?4() -> string
tulip.tlp.PluginInfoInterface.getGroup?4() -> string
tulip.tlp.PluginInfoInterface.getAuthor?4() -> string
tulip.tlp.PluginInfoInterface.getDate?4() -> string
tulip.tlp.PluginInfoInterface.getInfo?4() -> string
tulip.tlp.PluginInfoInterface.getRelease?4() -> string
tulip.tlp.PluginInfoInterface.getMajor?4() -> string
tulip.tlp.PluginInfoInterface.getMinor?4() -> string
tulip.tlp.PluginInfoInterface.getTulipRelease?4() -> string
tulip.tlp.PluginInfoInterface.getTulipMajor?4() -> string
tulip.tlp.PluginInfoInterface.getTulipMinor?4() -> string
tulip.tlp.AlgorithmPlugin?1()
tulip.tlp.AlgorithmPlugin.__init__?1(self)
tulip.tlp.AlgorithmPlugin?1(tlp.AlgorithmPlugin)
tulip.tlp.AlgorithmPlugin.__init__?1(self, tlp.AlgorithmPlugin)
tulip.tlp.AlgorithmPlugin.createPluginObject?4(tlp.AlgorithmContext) -> tlp.Algorithm
tulip.tlp.AlgorithmPlugin.getMajor?4() -> string
tulip.tlp.AlgorithmPlugin.getMinor?4() -> string
tulip.tlp.AlgorithmPlugin.getTulipMajor?4() -> string
tulip.tlp.AlgorithmPlugin.getTulipMinor?4() -> string
tulip.tlp.AlgorithmPlugin.getClassName?4() -> string
tulip.tlp.AlgorithmPlugin.getName?4() -> string
tulip.tlp.AlgorithmPlugin.getGroup?4() -> string
tulip.tlp.AlgorithmPlugin.getAuthor?4() -> string
tulip.tlp.AlgorithmPlugin.getDate?4() -> string
tulip.tlp.AlgorithmPlugin.getInfo?4() -> string
tulip.tlp.AlgorithmPlugin.getRelease?4() -> string
tulip.tlp.AlgorithmPlugin.registerPlugin?4()
tulip.tlp.LayoutAlgorithm.layoutResult?7
tulip.tlp.LayoutAlgorithm?1(tlp.AlgorithmContext)
tulip.tlp.LayoutAlgorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.LayoutAlgorithm?1(tlp.LayoutAlgorithm)
tulip.tlp.LayoutAlgorithm.__init__?1(self, tlp.LayoutAlgorithm)
tulip.tlp.IntegerAlgorithm.integerResult?7
tulip.tlp.IntegerAlgorithm?1(tlp.AlgorithmContext)
tulip.tlp.IntegerAlgorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.IntegerAlgorithm?1(tlp.IntegerAlgorithm)
tulip.tlp.IntegerAlgorithm.__init__?1(self, tlp.IntegerAlgorithm)
tulip.tlp.DoubleAlgorithm.doubleResult?7
tulip.tlp.DoubleAlgorithm?1(tlp.AlgorithmContext)
tulip.tlp.DoubleAlgorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.DoubleAlgorithm?1(tlp.DoubleAlgorithm)
tulip.tlp.DoubleAlgorithm.__init__?1(self, tlp.DoubleAlgorithm)
tulip.tlp.BooleanAlgorithm.booleanResult?7
tulip.tlp.BooleanAlgorithm?1(tlp.AlgorithmContext)
tulip.tlp.BooleanAlgorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.BooleanAlgorithm?1(tlp.BooleanAlgorithm)
tulip.tlp.BooleanAlgorithm.__init__?1(self, tlp.BooleanAlgorithm)
tulip.tlp.SizeAlgorithm.sizeResult?7
tulip.tlp.SizeAlgorithm?1(tlp.AlgorithmContext)
tulip.tlp.SizeAlgorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.SizeAlgorithm?1(tlp.SizeAlgorithm)
tulip.tlp.SizeAlgorithm.__init__?1(self, tlp.SizeAlgorithm)
tulip.tlp.ColorAlgorithm.colorResult?7
tulip.tlp.ColorAlgorithm?1(tlp.AlgorithmContext)
tulip.tlp.ColorAlgorithm.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.ColorAlgorithm?1(tlp.ColorAlgorithm)
tulip.tlp.ColorAlgorithm.__init__?1(self, tlp.ColorAlgorithm)
tulip.tlp.ImportModule.dataSet?7
tulip.tlp.ImportModule.graph?7
tulip.tlp.ImportModule.pluginProgress?7
tulip.tlp.ImportModule?1(tlp.AlgorithmContext)
tulip.tlp.ImportModule.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.ImportModule?1(tlp.ImportModule)
tulip.tlp.ImportModule.__init__?1(self, tlp.ImportModule)
tulip.tlp.ImportModule.importGraph?4() -> bool
tulip.tlp.ImportModuleFactory?1()
tulip.tlp.ImportModuleFactory.__init__?1(self)
tulip.tlp.ImportModuleFactory?1(tlp.ImportModuleFactory)
tulip.tlp.ImportModuleFactory.__init__?1(self, tlp.ImportModuleFactory)
tulip.tlp.ImportModuleFactory.createPluginObject?4(tlp.AlgorithmContext) -> tlp.ImportModule
tulip.tlp.ImportModuleFactory.getMajor?4() -> string
tulip.tlp.ImportModuleFactory.getMinor?4() -> string
tulip.tlp.ImportModuleFactory.getTulipMajor?4() -> string
tulip.tlp.ImportModuleFactory.getTulipMinor?4() -> string
tulip.tlp.ImportModuleFactory.registerPlugin?4()
tulip.tlp.ExportModule.dataSet?7
tulip.tlp.ExportModule.graph?7
tulip.tlp.ExportModule.pluginProgress?7
tulip.tlp.ExportModule?1(tlp.AlgorithmContext)
tulip.tlp.ExportModule.__init__?1(self, tlp.AlgorithmContext)
tulip.tlp.ExportModule?1(tlp.ExportModule)
tulip.tlp.ExportModule.__init__?1(self, tlp.ExportModule)
tulip.tlp.ExportModule.exportGraph?4(std.ostream) -> bool
tulip.tlp.ExportModuleFactory?1()
tulip.tlp.ExportModuleFactory.__init__?1(self)
tulip.tlp.ExportModuleFactory?1(tlp.ExportModuleFactory)
tulip.tlp.ExportModuleFactory.__init__?1(self, tlp.ExportModuleFactory)
tulip.tlp.ExportModuleFactory.createPluginObject?4(tlp.AlgorithmContext) -> tlp.ExportModule
tulip.tlp.ExportModuleFactory.getMajor?4() -> string
tulip.tlp.ExportModuleFactory.getMinor?4() -> string
tulip.tlp.ExportModuleFactory.getTulipMajor?4() -> string
tulip.tlp.ExportModuleFactory.getTulipMinor?4() -> string
tulip.tlp.ExportModuleFactory.registerPlugin?4()
tulip.tlp.PropertyObserver?1()
tulip.tlp.PropertyObserver.__init__?1(self)
tulip.tlp.PropertyObserver?1(tlp.PropertyObserver)
tulip.tlp.PropertyObserver.__init__?1(self, tlp.PropertyObserver)
tulip.tlp.PropertyObserver.beforeSetNodeValue?4(tlp.PropertyInterface, tlp.node)
tulip.tlp.PropertyObserver.afterSetNodeValue?4(tlp.PropertyInterface, tlp.node)
tulip.tlp.PropertyObserver.beforeSetEdgeValue?4(tlp.PropertyInterface, tlp.edge)
tulip.tlp.PropertyObserver.afterSetEdgeValue?4(tlp.PropertyInterface, tlp.edge)
tulip.tlp.PropertyObserver.beforeSetAllNodeValue?4(tlp.PropertyInterface)
tulip.tlp.PropertyObserver.afterSetAllNodeValue?4(tlp.PropertyInterface)
tulip.tlp.PropertyObserver.beforeSetAllEdgeValue?4(tlp.PropertyInterface)
tulip.tlp.PropertyObserver.afterSetAllEdgeValue?4(tlp.PropertyInterface)
tulip.tlp.PropertyObserver.destroy?4(tlp.PropertyInterface)
tulip.tlp.PropertyInterface?1()
tulip.tlp.PropertyInterface.__init__?1(self)
tulip.tlp.PropertyInterface?1(tlp.PropertyInterface)
tulip.tlp.PropertyInterface.__init__?1(self, tlp.PropertyInterface)
tulip.tlp.PropertyInterface.getGraph?4() -> tlp.Graph
tulip.tlp.PropertyInterface.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.PropertyInterface.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.PropertyInterface.getTypename?4() -> string
tulip.tlp.PropertyInterface.getName?4() -> string
tulip.tlp.PropertyInterface.getNodeDefaultStringValue?4() -> string
tulip.tlp.PropertyInterface.getEdgeDefaultStringValue?4() -> string
tulip.tlp.PropertyInterface.setAllNodeStringValue?4(string) -> bool
tulip.tlp.PropertyInterface.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.PropertyInterface.erase?4(tlp.node)
tulip.tlp.PropertyInterface.erase?4(tlp.edge)
tulip.tlp.PropertyInterface.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.PropertyInterface.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.PropertyInterface.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.PropertyInterface.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.PropertyInterface.addPropertyObserver?4(tlp.PropertyObserver)
tulip.tlp.PropertyInterface.removePropertyObserver?4(tlp.PropertyObserver)
tulip.tlp.PropertyInterface.countPropertyObservers?4() -> int
tulip.tlp.BooleanProperty?1(tlp.Graph, string name="")
tulip.tlp.BooleanProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.BooleanProperty.setAllNodeValue?4(bool)
tulip.tlp.BooleanProperty.setAllEdgeValue?4(bool)
tulip.tlp.BooleanProperty.getNodeDefaultValue?4() -> bool
tulip.tlp.BooleanProperty.getEdgeDefaultValue?4() -> bool
tulip.tlp.BooleanProperty.getNodeValue?4(tlp.node) -> bool
tulip.tlp.BooleanProperty.getEdgeValue?4(tlp.edge) -> bool
tulip.tlp.BooleanProperty.setNodeValue?4(tlp.node, bool)
tulip.tlp.BooleanProperty.setEdgeValue?4(tlp.edge, bool)
tulip.tlp.BooleanProperty.erase?4(tlp.node)
tulip.tlp.BooleanProperty.erase?4(tlp.edge)
tulip.tlp.BooleanProperty.getTypename?4() -> string
tulip.tlp.BooleanProperty.getName?4() -> string
tulip.tlp.BooleanProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.BooleanProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.BooleanProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.BooleanProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.BooleanProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.BooleanProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.BooleanProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.BooleanProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.BooleanProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.BooleanProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.BooleanProperty.copy?4(tlp.node, tlp.node, tlp.BooleanProperty, bool ifNotDefault=False) -> bool
tulip.tlp.BooleanProperty.copy?4(tlp.edge, tlp.edge, tlp.BooleanProperty, bool ifNotDefault=False) -> bool
tulip.tlp.BooleanProperty.copy?4(tlp.BooleanProperty)
tulip.tlp.BooleanProperty.reverse?4()
tulip.tlp.BooleanProperty.reverseEdgeDirection?4()
tulip.tlp.BooleanProperty.getNodesEqualTo?4(bool, tlp.Graph graph=None) -> tlp.IteratorNode
tulip.tlp.BooleanProperty.getEdgesEqualTo?4(bool, tlp.Graph graph=None) -> tlp.IteratorEdge
tulip.tlp.BooleanVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.BooleanVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.BooleanVectorProperty.getNodeDefaultValue?4() -> list-of-bool
tulip.tlp.BooleanVectorProperty.getEdgeDefaultValue?4() -> list-of-bool
tulip.tlp.BooleanVectorProperty.getNodeValue?4(tlp.node) -> list-of-bool
tulip.tlp.BooleanVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-bool
tulip.tlp.BooleanVectorProperty.setNodeValue?4(tlp.node, list-of-bool)
tulip.tlp.BooleanVectorProperty.setEdgeValue?4(tlp.edge, list-of-bool)
tulip.tlp.BooleanVectorProperty.setAllNodeValue?4(list-of-bool)
tulip.tlp.BooleanVectorProperty.setAllEdgeValue?4(list-of-bool)
tulip.tlp.BooleanVectorProperty.setNodeEltValue?4(tlp.node, int, bool)
tulip.tlp.BooleanVectorProperty.getNodeEltValue?4(tlp.node, int) -> bool
tulip.tlp.BooleanVectorProperty.pushBackNodeEltValue?4(tlp.node, bool)
tulip.tlp.BooleanVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.BooleanVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.BooleanVectorProperty.resizeNodeValue?4(tlp.node, int, bool)
tulip.tlp.BooleanVectorProperty.setEdgeEltValue?4(tlp.edge, int, bool)
tulip.tlp.BooleanVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> bool
tulip.tlp.BooleanVectorProperty.pushBackEdgeEltValue?4(tlp.edge, bool)
tulip.tlp.BooleanVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.BooleanVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.BooleanVectorProperty.resizeEdgeValue?4(tlp.edge, int, bool)
tulip.tlp.BooleanVectorProperty.erase?4(tlp.node)
tulip.tlp.BooleanVectorProperty.erase?4(tlp.edge)
tulip.tlp.BooleanVectorProperty.getTypename?4() -> string
tulip.tlp.BooleanVectorProperty.getName?4() -> string
tulip.tlp.BooleanVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.BooleanVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.BooleanVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.BooleanVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.BooleanVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.BooleanVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.BooleanVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.BooleanVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.BooleanVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.BooleanVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.BooleanVectorProperty.copy?4(tlp.node, tlp.node, tlp.BooleanVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.BooleanVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.BooleanVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.BooleanVectorProperty.copy?4(tlp.BooleanVectorProperty)
tulip.tlp.DoubleProperty?1(tlp.Graph, string name="")
tulip.tlp.DoubleProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.DoubleProperty.setAllNodeValue?4(float)
tulip.tlp.DoubleProperty.setAllEdgeValue?4(float)
tulip.tlp.DoubleProperty.getNodeDefaultValue?4() -> float
tulip.tlp.DoubleProperty.getEdgeDefaultValue?4() -> float
tulip.tlp.DoubleProperty.getNodeValue?4(tlp.node) -> float
tulip.tlp.DoubleProperty.getEdgeValue?4(tlp.edge) -> float
tulip.tlp.DoubleProperty.setNodeValue?4(tlp.node, float)
tulip.tlp.DoubleProperty.setEdgeValue?4(tlp.edge, float)
tulip.tlp.DoubleProperty.erase?4(tlp.node)
tulip.tlp.DoubleProperty.erase?4(tlp.edge)
tulip.tlp.DoubleProperty.getTypename?4() -> string
tulip.tlp.DoubleProperty.getName?4() -> string
tulip.tlp.DoubleProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.DoubleProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.DoubleProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.DoubleProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.DoubleProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.DoubleProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.DoubleProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.DoubleProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.DoubleProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.DoubleProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.DoubleProperty.copy?4(tlp.node, tlp.node, tlp.DoubleProperty, bool ifNotDefault=False) -> bool
tulip.tlp.DoubleProperty.copy?4(tlp.edge, tlp.edge, tlp.DoubleProperty, bool ifNotDefault=False) -> bool
tulip.tlp.DoubleProperty.copy?4(tlp.DoubleProperty)
tulip.tlp.DoubleProperty.getNodeMin?4(tlp.Graph subgraph=None) -> float
tulip.tlp.DoubleProperty.getNodeMax?4(tlp.Graph subgraph=None) -> float
tulip.tlp.DoubleProperty.getEdgeMin?4(tlp.Graph subgraph=None) -> float
tulip.tlp.DoubleProperty.getEdgeMax?4(tlp.Graph subgraph=None) -> float
tulip.tlp.DoubleProperty.uniformQuantification?4(int)
tulip.tlp.DoubleProperty.nodesUniformQuantification?4(int)
tulip.tlp.DoubleProperty.edgesUniformQuantification?4(int)
tulip.tlp.DoubleVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.DoubleVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.DoubleVectorProperty.getNodeDefaultValue?4() -> list-of-float
tulip.tlp.DoubleVectorProperty.getEdgeDefaultValue?4() -> list-of-float
tulip.tlp.DoubleVectorProperty.getNodeValue?4(tlp.node) -> list-of-float
tulip.tlp.DoubleVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-float
tulip.tlp.DoubleVectorProperty.setNodeValue?4(tlp.node, list-of-float)
tulip.tlp.DoubleVectorProperty.setEdgeValue?4(tlp.edge, list-of-float)
tulip.tlp.DoubleVectorProperty.setAllNodeValue?4(list-of-float)
tulip.tlp.DoubleVectorProperty.setAllEdgeValue?4(list-of-float)
tulip.tlp.DoubleVectorProperty.setNodeEltValue?4(tlp.node, int, float)
tulip.tlp.DoubleVectorProperty.getNodeEltValue?4(tlp.node, int) -> float
tulip.tlp.DoubleVectorProperty.pushBackNodeEltValue?4(tlp.node, float)
tulip.tlp.DoubleVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.DoubleVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.DoubleVectorProperty.resizeNodeValue?4(tlp.node, int, float)
tulip.tlp.DoubleVectorProperty.setEdgeEltValue?4(tlp.edge, int, float)
tulip.tlp.DoubleVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> float
tulip.tlp.DoubleVectorProperty.pushBackEdgeEltValue?4(tlp.edge, float)
tulip.tlp.DoubleVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.DoubleVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.DoubleVectorProperty.resizeEdgeValue?4(tlp.edge, int, float)
tulip.tlp.DoubleVectorProperty.erase?4(tlp.node)
tulip.tlp.DoubleVectorProperty.erase?4(tlp.edge)
tulip.tlp.DoubleVectorProperty.getTypename?4() -> string
tulip.tlp.DoubleVectorProperty.getName?4() -> string
tulip.tlp.DoubleVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.DoubleVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.DoubleVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.DoubleVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.DoubleVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.DoubleVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.DoubleVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.DoubleVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.DoubleVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.DoubleVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.DoubleVectorProperty.copy?4(tlp.node, tlp.node, tlp.DoubleVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.DoubleVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.DoubleVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.DoubleVectorProperty.copy?4(tlp.DoubleVectorProperty)
tulip.tlp.ColorProperty?1(tlp.Graph, string name="")
tulip.tlp.ColorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.ColorProperty.setAllNodeValue?4(tlp.Color)
tulip.tlp.ColorProperty.setAllEdgeValue?4(tlp.Color)
tulip.tlp.ColorProperty.getNodeDefaultValue?4() -> tlp.Color
tulip.tlp.ColorProperty.getEdgeDefaultValue?4() -> tlp.Color
tulip.tlp.ColorProperty.getNodeValue?4(tlp.node) -> tlp.Color
tulip.tlp.ColorProperty.getEdgeValue?4(tlp.edge) -> tlp.Color
tulip.tlp.ColorProperty.setNodeValue?4(tlp.node, tlp.Color)
tulip.tlp.ColorProperty.setEdgeValue?4(tlp.edge, tlp.Color)
tulip.tlp.ColorProperty.erase?4(tlp.node)
tulip.tlp.ColorProperty.erase?4(tlp.edge)
tulip.tlp.ColorProperty.getTypename?4() -> string
tulip.tlp.ColorProperty.getName?4() -> string
tulip.tlp.ColorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.ColorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.ColorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.ColorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.ColorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.ColorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.ColorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.ColorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.ColorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.ColorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.ColorProperty.copy?4(tlp.node, tlp.node, tlp.ColorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.ColorProperty.copy?4(tlp.edge, tlp.edge, tlp.ColorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.ColorProperty.copy?4(tlp.ColorProperty)
tulip.tlp.ColorVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.ColorVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.ColorVectorProperty.getNodeDefaultValue?4() -> list-of-tlp.Color
tulip.tlp.ColorVectorProperty.getEdgeDefaultValue?4() -> list-of-tlp.Color
tulip.tlp.ColorVectorProperty.getNodeValue?4(tlp.node) -> list-of-tlp.Color
tulip.tlp.ColorVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-tlp.Color
tulip.tlp.ColorVectorProperty.setNodeValue?4(tlp.node, list-of-tlp.Color)
tulip.tlp.ColorVectorProperty.setEdgeValue?4(tlp.edge, list-of-tlp.Color)
tulip.tlp.ColorVectorProperty.setAllNodeValue?4(list-of-tlp.Color)
tulip.tlp.ColorVectorProperty.setAllEdgeValue?4(list-of-tlp.Color)
tulip.tlp.ColorVectorProperty.setNodeEltValue?4(tlp.node, int, tlp.Color)
tulip.tlp.ColorVectorProperty.getNodeEltValue?4(tlp.node, int) -> tlp.Color
tulip.tlp.ColorVectorProperty.pushBackNodeEltValue?4(tlp.node, tlp.Color)
tulip.tlp.ColorVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.ColorVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.ColorVectorProperty.resizeNodeValue?4(tlp.node, int, tlp.Color)
tulip.tlp.ColorVectorProperty.setEdgeEltValue?4(tlp.edge, int, tlp.Color)
tulip.tlp.ColorVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> tlp.Color
tulip.tlp.ColorVectorProperty.pushBackEdgeEltValue?4(tlp.edge, tlp.Color)
tulip.tlp.ColorVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.ColorVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.ColorVectorProperty.resizeEdgeValue?4(tlp.edge, int, tlp.Color)
tulip.tlp.ColorVectorProperty.erase?4(tlp.node)
tulip.tlp.ColorVectorProperty.erase?4(tlp.edge)
tulip.tlp.ColorVectorProperty.getTypename?4() -> string
tulip.tlp.ColorVectorProperty.getName?4() -> string
tulip.tlp.ColorVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.ColorVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.ColorVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.ColorVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.ColorVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.ColorVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.ColorVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.ColorVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.ColorVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.ColorVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.ColorVectorProperty.copy?4(tlp.node, tlp.node, tlp.ColorVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.ColorVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.ColorVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.ColorVectorProperty.copy?4(tlp.ColorVectorProperty)
tulip.tlp.StringProperty?1(tlp.Graph, string name="")
tulip.tlp.StringProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.StringProperty.setAllNodeValue?4(string)
tulip.tlp.StringProperty.setAllEdgeValue?4(string)
tulip.tlp.StringProperty.getNodeDefaultValue?4() -> string
tulip.tlp.StringProperty.getEdgeDefaultValue?4() -> string
tulip.tlp.StringProperty.getNodeValue?4(tlp.node) -> string
tulip.tlp.StringProperty.getEdgeValue?4(tlp.edge) -> string
tulip.tlp.StringProperty.setNodeValue?4(tlp.node, string)
tulip.tlp.StringProperty.setEdgeValue?4(tlp.edge, string)
tulip.tlp.StringProperty.erase?4(tlp.node)
tulip.tlp.StringProperty.erase?4(tlp.edge)
tulip.tlp.StringProperty.getTypename?4() -> string
tulip.tlp.StringProperty.getName?4() -> string
tulip.tlp.StringProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.StringProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.StringProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.StringProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.StringProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.StringProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.StringProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.StringProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.StringProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.StringProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.StringProperty.copy?4(tlp.node, tlp.node, tlp.StringProperty, bool ifNotDefault=False) -> bool
tulip.tlp.StringProperty.copy?4(tlp.edge, tlp.edge, tlp.StringProperty, bool ifNotDefault=False) -> bool
tulip.tlp.StringProperty.copy?4(tlp.StringProperty)
tulip.tlp.StringVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.StringVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.StringVectorProperty.getNodeDefaultValue?4() -> list-of-std.string
tulip.tlp.StringVectorProperty.getEdgeDefaultValue?4() -> list-of-std.string
tulip.tlp.StringVectorProperty.getNodeValue?4(tlp.node) -> list-of-std.string
tulip.tlp.StringVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-std.string
tulip.tlp.StringVectorProperty.setNodeValue?4(tlp.node, list-of-std.string)
tulip.tlp.StringVectorProperty.setEdgeValue?4(tlp.edge, list-of-std.string)
tulip.tlp.StringVectorProperty.setAllNodeValue?4(list-of-std.string)
tulip.tlp.StringVectorProperty.setAllEdgeValue?4(list-of-std.string)
tulip.tlp.StringVectorProperty.setNodeEltValue?4(tlp.node, int, string)
tulip.tlp.StringVectorProperty.getNodeEltValue?4(tlp.node, int) -> string
tulip.tlp.StringVectorProperty.pushBackNodeEltValue?4(tlp.node, string)
tulip.tlp.StringVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.StringVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.StringVectorProperty.resizeNodeValue?4(tlp.node, int, string)
tulip.tlp.StringVectorProperty.setEdgeEltValue?4(tlp.edge, int, string)
tulip.tlp.StringVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> string
tulip.tlp.StringVectorProperty.pushBackEdgeEltValue?4(tlp.edge, string)
tulip.tlp.StringVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.StringVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.StringVectorProperty.resizeEdgeValue?4(tlp.edge, int, string)
tulip.tlp.StringVectorProperty.erase?4(tlp.node)
tulip.tlp.StringVectorProperty.erase?4(tlp.edge)
tulip.tlp.StringVectorProperty.getTypename?4() -> string
tulip.tlp.StringVectorProperty.getName?4() -> string
tulip.tlp.StringVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.StringVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.StringVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.StringVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.StringVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.StringVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.StringVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.StringVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.StringVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.StringVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.StringVectorProperty.copy?4(tlp.node, tlp.node, tlp.StringVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.StringVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.StringVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.StringVectorProperty.copy?4(tlp.StringVectorProperty)
tulip.tlp.SizeProperty?1(tlp.Graph, string name="")
tulip.tlp.SizeProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.SizeProperty.setAllNodeValue?4(tlp.Size)
tulip.tlp.SizeProperty.setAllEdgeValue?4(tlp.Size)
tulip.tlp.SizeProperty.getNodeDefaultValue?4() -> tlp.Size
tulip.tlp.SizeProperty.getEdgeDefaultValue?4() -> tlp.Size
tulip.tlp.SizeProperty.getNodeValue?4(tlp.node) -> tlp.Size
tulip.tlp.SizeProperty.getEdgeValue?4(tlp.edge) -> tlp.Size
tulip.tlp.SizeProperty.setNodeValue?4(tlp.node, tlp.Size)
tulip.tlp.SizeProperty.setEdgeValue?4(tlp.edge, tlp.Size)
tulip.tlp.SizeProperty.erase?4(tlp.node)
tulip.tlp.SizeProperty.erase?4(tlp.edge)
tulip.tlp.SizeProperty.getTypename?4() -> string
tulip.tlp.SizeProperty.getName?4() -> string
tulip.tlp.SizeProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.SizeProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.SizeProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.SizeProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.SizeProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.SizeProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.SizeProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.SizeProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.SizeProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.SizeProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.SizeProperty.copy?4(tlp.node, tlp.node, tlp.SizeProperty, bool ifNotDefault=False) -> bool
tulip.tlp.SizeProperty.copy?4(tlp.edge, tlp.edge, tlp.SizeProperty, bool ifNotDefault=False) -> bool
tulip.tlp.SizeProperty.copy?4(tlp.SizeProperty)
tulip.tlp.SizeProperty.getMax?4(tlp.Graph sg=None) -> tlp.Size
tulip.tlp.SizeProperty.getMin?4(tlp.Graph sg=None) -> tlp.Size
tulip.tlp.SizeProperty.scale?4(tlp.Size, tlp.Graph sg=None)
tulip.tlp.SizeProperty.scale?4(tlp.Size, tlp.IteratorNode, tlp.IteratorEdge)
tulip.tlp.SizeVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.SizeVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.SizeVectorProperty.getNodeDefaultValue?4() -> list-of-tlp.Size
tulip.tlp.SizeVectorProperty.getEdgeDefaultValue?4() -> list-of-tlp.Size
tulip.tlp.SizeVectorProperty.getNodeValue?4(tlp.node) -> list-of-tlp.Size
tulip.tlp.SizeVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-tlp.Size
tulip.tlp.SizeVectorProperty.setNodeValue?4(tlp.node, list-of-tlp.Size)
tulip.tlp.SizeVectorProperty.setEdgeValue?4(tlp.edge, list-of-tlp.Size)
tulip.tlp.SizeVectorProperty.setAllNodeValue?4(list-of-tlp.Size)
tulip.tlp.SizeVectorProperty.setAllEdgeValue?4(list-of-tlp.Size)
tulip.tlp.SizeVectorProperty.setNodeEltValue?4(tlp.node, int, tlp.Size)
tulip.tlp.SizeVectorProperty.getNodeEltValue?4(tlp.node, int) -> tlp.Size
tulip.tlp.SizeVectorProperty.pushBackNodeEltValue?4(tlp.node, tlp.Size)
tulip.tlp.SizeVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.SizeVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.SizeVectorProperty.resizeNodeValue?4(tlp.node, int, tlp.Size)
tulip.tlp.SizeVectorProperty.setEdgeEltValue?4(tlp.edge, int, tlp.Size)
tulip.tlp.SizeVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> tlp.Size
tulip.tlp.SizeVectorProperty.pushBackEdgeEltValue?4(tlp.edge, tlp.Size)
tulip.tlp.SizeVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.SizeVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.SizeVectorProperty.resizeEdgeValue?4(tlp.edge, int, tlp.Size)
tulip.tlp.SizeVectorProperty.erase?4(tlp.node)
tulip.tlp.SizeVectorProperty.erase?4(tlp.edge)
tulip.tlp.SizeVectorProperty.getTypename?4() -> string
tulip.tlp.SizeVectorProperty.getName?4() -> string
tulip.tlp.SizeVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.SizeVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.SizeVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.SizeVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.SizeVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.SizeVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.SizeVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.SizeVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.SizeVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.SizeVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.SizeVectorProperty.copy?4(tlp.node, tlp.node, tlp.SizeVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.SizeVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.SizeVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.SizeVectorProperty.copy?4(tlp.SizeVectorProperty)
tulip.tlp.IntegerProperty?1(tlp.Graph, string name="")
tulip.tlp.IntegerProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.IntegerProperty.setAllNodeValue?4(int)
tulip.tlp.IntegerProperty.setAllEdgeValue?4(int)
tulip.tlp.IntegerProperty.getNodeDefaultValue?4() -> int
tulip.tlp.IntegerProperty.getEdgeDefaultValue?4() -> int
tulip.tlp.IntegerProperty.getNodeValue?4(tlp.node) -> int
tulip.tlp.IntegerProperty.getEdgeValue?4(tlp.edge) -> int
tulip.tlp.IntegerProperty.setNodeValue?4(tlp.node, int)
tulip.tlp.IntegerProperty.setEdgeValue?4(tlp.edge, int)
tulip.tlp.IntegerProperty.erase?4(tlp.node)
tulip.tlp.IntegerProperty.erase?4(tlp.edge)
tulip.tlp.IntegerProperty.getTypename?4() -> string
tulip.tlp.IntegerProperty.getName?4() -> string
tulip.tlp.IntegerProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.IntegerProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.IntegerProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.IntegerProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.IntegerProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.IntegerProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.IntegerProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.IntegerProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.IntegerProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.IntegerProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.IntegerProperty.copy?4(tlp.node, tlp.node, tlp.IntegerProperty, bool ifNotDefault=False) -> bool
tulip.tlp.IntegerProperty.copy?4(tlp.edge, tlp.edge, tlp.IntegerProperty, bool ifNotDefault=False) -> bool
tulip.tlp.IntegerProperty.copy?4(tlp.IntegerProperty)
tulip.tlp.IntegerProperty.getNodeMin?4(tlp.Graph sg=None) -> int
tulip.tlp.IntegerProperty.getNodeMax?4(tlp.Graph sg=None) -> int
tulip.tlp.IntegerProperty.getEdgeMin?4(tlp.Graph sg=None) -> int
tulip.tlp.IntegerProperty.getEdgeMax?4(tlp.Graph sg=None) -> int
tulip.tlp.IntegerVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.IntegerVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.IntegerVectorProperty.getNodeDefaultValue?4() -> list-of-int
tulip.tlp.IntegerVectorProperty.getEdgeDefaultValue?4() -> list-of-int
tulip.tlp.IntegerVectorProperty.getNodeValue?4(tlp.node) -> list-of-int
tulip.tlp.IntegerVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-int
tulip.tlp.IntegerVectorProperty.setNodeValue?4(tlp.node, list-of-int)
tulip.tlp.IntegerVectorProperty.setEdgeValue?4(tlp.edge, list-of-int)
tulip.tlp.IntegerVectorProperty.setAllNodeValue?4(list-of-int)
tulip.tlp.IntegerVectorProperty.setAllEdgeValue?4(list-of-int)
tulip.tlp.IntegerVectorProperty.setNodeEltValue?4(tlp.node, int, int)
tulip.tlp.IntegerVectorProperty.getNodeEltValue?4(tlp.node, int) -> int
tulip.tlp.IntegerVectorProperty.pushBackNodeEltValue?4(tlp.node, int)
tulip.tlp.IntegerVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.IntegerVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.IntegerVectorProperty.resizeNodeValue?4(tlp.node, int, int)
tulip.tlp.IntegerVectorProperty.setEdgeEltValue?4(tlp.edge, int, int)
tulip.tlp.IntegerVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> int
tulip.tlp.IntegerVectorProperty.pushBackEdgeEltValue?4(tlp.edge, int)
tulip.tlp.IntegerVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.IntegerVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.IntegerVectorProperty.resizeEdgeValue?4(tlp.edge, int, int)
tulip.tlp.IntegerVectorProperty.erase?4(tlp.node)
tulip.tlp.IntegerVectorProperty.erase?4(tlp.edge)
tulip.tlp.IntegerVectorProperty.getTypename?4() -> string
tulip.tlp.IntegerVectorProperty.getName?4() -> string
tulip.tlp.IntegerVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.IntegerVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.IntegerVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.IntegerVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.IntegerVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.IntegerVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.IntegerVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.IntegerVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.IntegerVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.IntegerVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.IntegerVectorProperty.copy?4(tlp.node, tlp.node, tlp.IntegerVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.IntegerVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.IntegerVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.IntegerVectorProperty.copy?4(tlp.IntegerVectorProperty)
tulip.tlp.LayoutProperty?1(tlp.Graph, string name="")
tulip.tlp.LayoutProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.LayoutProperty.setAllNodeValue?4(tlp.Coord)
tulip.tlp.LayoutProperty.setAllEdgeValue?4(list-of-tlp.Coord)
tulip.tlp.LayoutProperty.getNodeDefaultValue?4() -> tlp.Coord
tulip.tlp.LayoutProperty.getEdgeDefaultValue?4() -> list-of-tlp.Coord
tulip.tlp.LayoutProperty.getNodeValue?4(tlp.node) -> tlp.Coord
tulip.tlp.LayoutProperty.getEdgeValue?4(tlp.edge) -> list-of-tlp.Coord
tulip.tlp.LayoutProperty.setNodeValue?4(tlp.node, tlp.Coord)
tulip.tlp.LayoutProperty.setEdgeValue?4(tlp.edge, list-of-tlp.Coord)
tulip.tlp.LayoutProperty.erase?4(tlp.node)
tulip.tlp.LayoutProperty.erase?4(tlp.edge)
tulip.tlp.LayoutProperty.getTypename?4() -> string
tulip.tlp.LayoutProperty.getName?4() -> string
tulip.tlp.LayoutProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.LayoutProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.LayoutProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.LayoutProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.LayoutProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.LayoutProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.LayoutProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.LayoutProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.LayoutProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.LayoutProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.LayoutProperty.copy?4(tlp.node, tlp.node, tlp.LayoutProperty, bool ifNotDefault=False) -> bool
tulip.tlp.LayoutProperty.copy?4(tlp.edge, tlp.edge, tlp.LayoutProperty, bool ifNotDefault=False) -> bool
tulip.tlp.LayoutProperty.copy?4(tlp.LayoutProperty)
tulip.tlp.LayoutProperty.getMax?4(tlp.Graph subgraph=None) -> tlp.Coord
tulip.tlp.LayoutProperty.getMin?4(tlp.Graph subgraph=None) -> tlp.Coord
tulip.tlp.LayoutProperty.translate?4(tlp.Vec3f, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.translate?4(tlp.Vec3f, tlp.IteratorNode, tlp.IteratorEdge)
tulip.tlp.LayoutProperty.scale?4(tlp.Vec3f, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.scale?4(tlp.Vec3f, tlp.IteratorNode, tlp.IteratorEdge)
tulip.tlp.LayoutProperty.rotateX?4(float, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.rotateY?4(float, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.rotateZ?4(float, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.rotateX?4(float, tlp.IteratorNode, tlp.IteratorEdge)
tulip.tlp.LayoutProperty.rotateY?4(float, tlp.IteratorNode, tlp.IteratorEdge)
tulip.tlp.LayoutProperty.rotateZ?4(float, tlp.IteratorNode, tlp.IteratorEdge)
tulip.tlp.LayoutProperty.center?4(tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.center?4(tlp.Vec3f, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.normalize?4(tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.perfectAspectRatio?4()
tulip.tlp.LayoutProperty.edgeLength?4(tlp.edge) -> float
tulip.tlp.LayoutProperty.averageEdgeLength?4(tlp.Graph subgraph=None) -> float
tulip.tlp.LayoutProperty.averageAngularResolution?4(tlp.Graph subgraph=None) -> float
tulip.tlp.LayoutProperty.averageAngularResolution?4(tlp.node, tlp.Graph subgraph=None) -> float
tulip.tlp.LayoutProperty.angularResolutions?4(tlp.node, tlp.Graph subgraph=None) -> list-of-float
tulip.tlp.LayoutProperty.computeEmbedding?4(tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.computeEmbedding?4(tlp.node, tlp.Graph subgraph=None)
tulip.tlp.LayoutProperty.crossingNumber?4() -> int
tulip.tlp.CoordVectorProperty?1(tlp.Graph, string name="")
tulip.tlp.CoordVectorProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.CoordVectorProperty.getNodeDefaultValue?4() -> list-of-tlp.Coord
tulip.tlp.CoordVectorProperty.getEdgeDefaultValue?4() -> list-of-tlp.Coord
tulip.tlp.CoordVectorProperty.getNodeValue?4(tlp.node) -> list-of-tlp.Coord
tulip.tlp.CoordVectorProperty.getEdgeValue?4(tlp.edge) -> list-of-tlp.Coord
tulip.tlp.CoordVectorProperty.setNodeValue?4(tlp.node, list-of-tlp.Coord)
tulip.tlp.CoordVectorProperty.setEdgeValue?4(tlp.edge, list-of-tlp.Coord)
tulip.tlp.CoordVectorProperty.setAllNodeValue?4(list-of-tlp.Coord)
tulip.tlp.CoordVectorProperty.setAllEdgeValue?4(list-of-tlp.Coord)
tulip.tlp.CoordVectorProperty.setNodeEltValue?4(tlp.node, int, tlp.Coord)
tulip.tlp.CoordVectorProperty.getNodeEltValue?4(tlp.node, int) -> tlp.Coord
tulip.tlp.CoordVectorProperty.pushBackNodeEltValue?4(tlp.node, tlp.Coord)
tulip.tlp.CoordVectorProperty.popBackNodeEltValue?4(tlp.node)
tulip.tlp.CoordVectorProperty.resizeNodeValue?4(tlp.node, int)
tulip.tlp.CoordVectorProperty.resizeNodeValue?4(tlp.node, int, tlp.Coord)
tulip.tlp.CoordVectorProperty.setEdgeEltValue?4(tlp.edge, int, tlp.Coord)
tulip.tlp.CoordVectorProperty.getEdgeEltValue?4(tlp.edge, int) -> tlp.Coord
tulip.tlp.CoordVectorProperty.pushBackEdgeEltValue?4(tlp.edge, tlp.Coord)
tulip.tlp.CoordVectorProperty.popBackEdgeEltValue?4(tlp.edge)
tulip.tlp.CoordVectorProperty.resizeEdgeValue?4(tlp.edge, int)
tulip.tlp.CoordVectorProperty.resizeEdgeValue?4(tlp.edge, int, tlp.Coord)
tulip.tlp.CoordVectorProperty.erase?4(tlp.node)
tulip.tlp.CoordVectorProperty.erase?4(tlp.edge)
tulip.tlp.CoordVectorProperty.getTypename?4() -> string
tulip.tlp.CoordVectorProperty.getName?4() -> string
tulip.tlp.CoordVectorProperty.getNodeDefaultStringValue?4() -> string
tulip.tlp.CoordVectorProperty.getEdgeDefaultStringValue?4() -> string
tulip.tlp.CoordVectorProperty.getNodeStringValue?4(tlp.node) -> string
tulip.tlp.CoordVectorProperty.getEdgeStringValue?4(tlp.edge) -> string
tulip.tlp.CoordVectorProperty.setNodeStringValue?4(tlp.node, string) -> bool
tulip.tlp.CoordVectorProperty.setEdgeStringValue?4(tlp.edge, string) -> bool
tulip.tlp.CoordVectorProperty.setAllNodeStringValue?4(string) -> bool
tulip.tlp.CoordVectorProperty.setAllEdgeStringValue?4(string) -> bool
tulip.tlp.CoordVectorProperty.getNonDefaultValuatedNodes?4(tlp.Graph subgraph=None) -> tlp.IteratorNode
tulip.tlp.CoordVectorProperty.getNonDefaultValuatedEdges?4(tlp.Graph subgraph=None) -> tlp.IteratorEdge
tulip.tlp.CoordVectorProperty.copy?4(tlp.node, tlp.node, tlp.CoordVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.CoordVectorProperty.copy?4(tlp.edge, tlp.edge, tlp.CoordVectorProperty, bool ifNotDefault=False) -> bool
tulip.tlp.CoordVectorProperty.copy?4(tlp.CoordVectorProperty)
tulip.tlp.GraphProperty?1(tlp.Graph, string name="")
tulip.tlp.GraphProperty.__init__?1(self, tlp.Graph, string name="")
tulip.tlp.GraphProperty.getNodeDefaultValue?4() -> tlp.Graph
tulip.tlp.GraphProperty.getEdgeDefaultValue?4() -> list-of-tlp.edge
tulip.tlp.GraphProperty.getNodeValue?4(tlp.node) -> tlp.Graph
tulip.tlp.GraphProperty.getEdgeValue?4(tlp.edge) -> list-of-tlp.edge
tulip.tlp.GraphProperty.setNodeValue?4(tlp.node, tlp.Graph)
tulip.tlp.GraphProperty.setEdgeValue?4(tlp.edge, list-of-tlp.edge)
tulip.tlp.GraphProperty.setAllNodeValue?4(tlp.Graph)
tulip.tlp.GraphProperty.setAllEdgeValue?4(list-of-tlp.edge)
tulip.tlp.Dependency.factoryName?7
tulip.tlp.Dependency.pluginName?7
tulip.tlp.Dependency.pluginRelease?7
tulip.tlp.Dependency?1(string, string, string)
tulip.tlp.Dependency.__init__?1(self, string, string, string)
tulip.tlp.Dependency?1(tlp.Dependency)
tulip.tlp.Dependency.__init__?1(self, tlp.Dependency)
tulip.tlp.PluginProgress?1()
tulip.tlp.PluginProgress.__init__?1(self)
tulip.tlp.PluginProgress?1(tlp.PluginProgress)
tulip.tlp.PluginProgress.__init__?1(self, tlp.PluginProgress)
tulip.tlp.PluginProgress.progress?4(int, int) -> tlp.ProgressState
tulip.tlp.PluginProgress.cancel?4()
tulip.tlp.PluginProgress.stop?4()
tulip.tlp.PluginProgress.isPreviewMode?4() -> bool
tulip.tlp.PluginProgress.setPreviewMode?4(bool)
tulip.tlp.PluginProgress.showPreview?4(bool)
tulip.tlp.PluginProgress.state?4() -> tlp.ProgressState
tulip.tlp.PluginProgress.getError?4() -> string
tulip.tlp.PluginProgress.setError?4(string)
tulip.tlp.PluginProgress.setComment?4(string)
tulip.tlp.GraphObserver?1()
tulip.tlp.GraphObserver.__init__?1(self)
tulip.tlp.GraphObserver?1(tlp.GraphObserver)
tulip.tlp.GraphObserver.__init__?1(self, tlp.GraphObserver)
tulip.tlp.GraphObserver.addNode?4(tlp.Graph, tlp.node)
tulip.tlp.GraphObserver.addEdge?4(tlp.Graph, tlp.edge)
tulip.tlp.GraphObserver.beforeSetEnds?4(tlp.Graph, tlp.edge)
tulip.tlp.GraphObserver.afterSetEnds?4(tlp.Graph, tlp.edge)
tulip.tlp.GraphObserver.delNode?4(tlp.Graph, tlp.node)
tulip.tlp.GraphObserver.delEdge?4(tlp.Graph, tlp.edge)
tulip.tlp.GraphObserver.reverseEdge?4(tlp.Graph, tlp.edge)
tulip.tlp.GraphObserver.destroy?4(tlp.Graph)
tulip.tlp.GraphObserver.addSubGraph?4(tlp.Graph, tlp.Graph)
tulip.tlp.GraphObserver.delSubGraph?4(tlp.Graph, tlp.Graph)
tulip.tlp.GraphObserver.addLocalProperty?4(tlp.Graph, string)
tulip.tlp.GraphObserver.beforeDelLocalProperty?4(tlp.Graph, string)
tulip.tlp.GraphObserver.afterDelLocalProperty?4(tlp.Graph, string)
tulip.tlp.GraphObserver.addInheritedProperty?4(tlp.Graph, string)
tulip.tlp.GraphObserver.beforeDelInheritedProperty?4(tlp.Graph, string)
tulip.tlp.GraphObserver.afterDelInheritedProperty?4(tlp.Graph, string)
tulip.tlp.GraphObserver.beforeSetAttribute?4(tlp.Graph, string)
tulip.tlp.GraphObserver.afterSetAttribute?4(tlp.Graph, string)
tulip.tlp.GraphObserver.removeAttribute?4(tlp.Graph, string)
tulip.tlp.IteratorString?1()
tulip.tlp.IteratorString.__init__?1(self)
tulip.tlp.IteratorString?1(tlp.IteratorString)
tulip.tlp.IteratorString.__init__?1(self, tlp.IteratorString)
tulip.tlp.IteratorString.next?4() -> string
tulip.tlp.IteratorString.hasNext?4() -> bool
tulip.tlp.IteratorGraph?1()
tulip.tlp.IteratorGraph.__init__?1(self)
tulip.tlp.IteratorGraph?1(tlp.IteratorGraph)
tulip.tlp.IteratorGraph.__init__?1(self, tlp.IteratorGraph)
tulip.tlp.IteratorGraph.next?4() -> tlp.Graph
tulip.tlp.IteratorGraph.hasNext?4() -> bool
tulip.tlp.Observable?1(tlp.Observable)
tulip.tlp.Observable.__init__?1(self, tlp.Observable)
tulip.tlp.Observable?1()
tulip.tlp.Observable.__init__?1(self)
tulip.tlp.Observable.getObject?4(tlp.node) -> tlp.Observable
tulip.tlp.Observable.isAlive?4(tlp.node) -> bool
tulip.tlp.Observable.addObserver?4(tlp.Observable)
tulip.tlp.Observable.addListener?4(tlp.Observable)
tulip.tlp.Observable.removeObserver?4(tlp.Observable)
tulip.tlp.Observable.removeListener?4(tlp.Observable)
tulip.tlp.Observable.holdObservers?4()
tulip.tlp.Observable.unholdObservers?4()
tulip.tlp.Observable.observersHoldCounter?4() -> int
tulip.tlp.Observable.treatEvents?4(list-of-tlp.Event)
tulip.tlp.Observable.treatEvent?4(tlp.Event)
tulip.tlp.Observable.sendEvent?4(tlp.Event)
tulip.tlp.Observable.observableDeleted?4()
tulip.tlp.Graph?1()
tulip.tlp.Graph.__init__?1(self)
tulip.tlp.Graph?1(tlp.Graph)
tulip.tlp.Graph.__init__?1(self, tlp.Graph)
tulip.tlp.Graph.applyAlgorithm?4(string, tlp.DataSet dataSet=None) -> (bool, string)
tulip.tlp.Graph.clear?4()
tulip.tlp.Graph.addSubGraph?4(tlp.BooleanProperty selection=None) -> tlp.Graph
tulip.tlp.Graph.addSubGraph?4(string) -> tlp.Graph
tulip.tlp.Graph.addCloneSubGraph?4(string name="unnamed") -> tlp.Graph
tulip.tlp.Graph.inducedSubGraph?4(list-of-tlp.node) -> tlp.Graph
tulip.tlp.Graph.delSubGraph?4(tlp.Graph)
tulip.tlp.Graph.delAllSubGraphs?4(tlp.Graph)
tulip.tlp.Graph.getSuperGraph?4() -> tlp.Graph
tulip.tlp.Graph.getRoot?4() -> tlp.Graph
tulip.tlp.Graph.setSuperGraph?4(tlp.Graph)
tulip.tlp.Graph.getSubGraphs?4() -> tlp.IteratorGraph
tulip.tlp.Graph.isSubGraph?4(tlp.Graph) -> bool
tulip.tlp.Graph.isDescendantGraph?4(tlp.Graph) -> bool
tulip.tlp.Graph.getSubGraph?4(int) -> tlp.Graph
tulip.tlp.Graph.getSubGraph?4(string) -> tlp.Graph
tulip.tlp.Graph.getDescendantGraph?4(int) -> tlp.Graph
tulip.tlp.Graph.getDescendantGraph?4(string) -> tlp.Graph
tulip.tlp.Graph.getNthSubGraph?4(int) -> tlp.Graph
tulip.tlp.Graph.numberOfSubGraphs?4() -> int
tulip.tlp.Graph.numberOfDescendantGraphs?4() -> int
tulip.tlp.Graph.addNode?4() -> tlp.node
tulip.tlp.Graph.addNodes?4(int) -> list-of-tlp.node
tulip.tlp.Graph.addNode?4(tlp.node)
tulip.tlp.Graph.addNodes?4(tlp.IteratorNode)
tulip.tlp.Graph.delNode?4(tlp.node, bool deleteInAllGraphs=False)
tulip.tlp.Graph.delNodes?4(tlp.IteratorNode, bool deleteInAllGraphs=False)
tulip.tlp.Graph.addEdge?4(tlp.node, tlp.node) -> tlp.edge
tulip.tlp.Graph.addEdges?4(list-of-std_pair_0100tlp_node_0100tlp_node) -> list-of-tlp.edge
tulip.tlp.Graph.addEdge?4(tlp.edge)
tulip.tlp.Graph.addEdges?4(tlp.IteratorEdge)
tulip.tlp.Graph.delEdge?4(tlp.edge, bool deleteInAllGraphs=False)
tulip.tlp.Graph.delEdges?4(tlp.IteratorEdge, bool deleteInAllGraphs=False)
tulip.tlp.Graph.setEdgeOrder?4(tlp.node, list-of-tlp.edge)
tulip.tlp.Graph.swapEdgeOrder?4(tlp.node, tlp.edge, tlp.edge)
tulip.tlp.Graph.setSource?4(tlp.edge, tlp.node)
tulip.tlp.Graph.setTarget?4(tlp.edge, tlp.node)
tulip.tlp.Graph.setEnds?4(tlp.edge, tlp.node, tlp.node)
tulip.tlp.Graph.reverse?4(tlp.edge)
tulip.tlp.Graph.getOneNode?4() -> tlp.node
tulip.tlp.Graph.getSource?4() -> tlp.node
tulip.tlp.Graph.getNodes?4() -> tlp.IteratorNode
tulip.tlp.Graph.getInNode?4(tlp.node, int) -> tlp.node
tulip.tlp.Graph.getInNodes?4(tlp.node) -> tlp.IteratorNode
tulip.tlp.Graph.getOutNode?4(tlp.node, int) -> tlp.node
tulip.tlp.Graph.getOutNodes?4(tlp.node) -> tlp.IteratorNode
tulip.tlp.Graph.getInOutNodes?4(tlp.node) -> tlp.IteratorNode
tulip.tlp.Graph.getNodeMetaInfo?4(tlp.node) -> tlp.Graph
tulip.tlp.Graph.getEdges?4() -> tlp.IteratorEdge
tulip.tlp.Graph.getOneEdge?4() -> tlp.edge
tulip.tlp.Graph.getOutEdges?4(tlp.node) -> tlp.IteratorEdge
tulip.tlp.Graph.getInOutEdges?4(tlp.node) -> tlp.IteratorEdge
tulip.tlp.Graph.getInEdges?4(tlp.node) -> tlp.IteratorEdge
tulip.tlp.Graph.getEdgeMetaInfo?4(tlp.edge) -> tlp.IteratorEdge
tulip.tlp.Graph.getId?4() -> int
tulip.tlp.Graph.numberOfNodes?4() -> int
tulip.tlp.Graph.numberOfEdges?4() -> int
tulip.tlp.Graph.deg?4(tlp.node) -> int
tulip.tlp.Graph.indeg?4(tlp.node) -> int
tulip.tlp.Graph.outdeg?4(tlp.node) -> int
tulip.tlp.Graph.source?4(tlp.edge) -> tlp.node
tulip.tlp.Graph.target?4(tlp.edge) -> tlp.node
tulip.tlp.Graph.ends?4(tlp.edge) -> (tlp.node, tlp.node)
tulip.tlp.Graph.opposite?4(tlp.edge, tlp.node) -> tlp.node
tulip.tlp.Graph.isElement?4(tlp.node) -> bool
tulip.tlp.Graph.isElement?4(tlp.edge) -> bool
tulip.tlp.Graph.isMetaNode?4(tlp.node) -> bool
tulip.tlp.Graph.isMetaEdge?4(tlp.edge) -> bool
tulip.tlp.Graph.existEdge?4(tlp.node, tlp.node, bool directed=True) -> tlp.edge
tulip.tlp.Graph.getBooleanProperty?4(string) -> tlp.BooleanProperty
tulip.tlp.Graph.getLocalBooleanProperty?4(string) -> tlp.BooleanProperty
tulip.tlp.Graph.getBooleanVectorProperty?4(string) -> tlp.BooleanVectorProperty
tulip.tlp.Graph.getLocalBooleanVectorProperty?4(string) -> tlp.BooleanVectorProperty
tulip.tlp.Graph.getLayoutProperty?4(string) -> tlp.LayoutProperty
tulip.tlp.Graph.getLocalLayoutProperty?4(string) -> tlp.LayoutProperty
tulip.tlp.Graph.getCoordVectorProperty?4(string) -> tlp.CoordVectorProperty
tulip.tlp.Graph.getLocalCoordVectorProperty?4(string) -> tlp.CoordVectorProperty
tulip.tlp.Graph.getColorProperty?4(string) -> tlp.ColorProperty
tulip.tlp.Graph.getLocalColorProperty?4(string) -> tlp.ColorProperty
tulip.tlp.Graph.getColorVectorProperty?4(string) -> tlp.ColorVectorProperty
tulip.tlp.Graph.getLocalColorVectorProperty?4(string) -> tlp.ColorVectorProperty
tulip.tlp.Graph.getDoubleProperty?4(string) -> tlp.DoubleProperty
tulip.tlp.Graph.getLocalDoubleProperty?4(string) -> tlp.DoubleProperty
tulip.tlp.Graph.getDoubleVectorProperty?4(string) -> tlp.DoubleVectorProperty
tulip.tlp.Graph.getLocalDoubleVectorProperty?4(string) -> tlp.DoubleVectorProperty
tulip.tlp.Graph.getStringProperty?4(string) -> tlp.StringProperty
tulip.tlp.Graph.getLocalStringProperty?4(string) -> tlp.StringProperty
tulip.tlp.Graph.getStringVectorProperty?4(string) -> tlp.StringVectorProperty
tulip.tlp.Graph.getLocalStringVectorProperty?4(string) -> tlp.StringVectorProperty
tulip.tlp.Graph.getSizeProperty?4(string) -> tlp.SizeProperty
tulip.tlp.Graph.getLocalSizeProperty?4(string) -> tlp.SizeProperty
tulip.tlp.Graph.getSizeVectorProperty?4(string) -> tlp.SizeVectorProperty
tulip.tlp.Graph.getLocalSizeVectorProperty?4(string) -> tlp.SizeVectorProperty
tulip.tlp.Graph.getIntegerProperty?4(string) -> tlp.IntegerProperty
tulip.tlp.Graph.getLocalIntegerProperty?4(string) -> tlp.IntegerProperty
tulip.tlp.Graph.getIntegerVectorProperty?4(string) -> tlp.IntegerVectorProperty
tulip.tlp.Graph.getLocalIntegerVectorProperty?4(string) -> tlp.IntegerVectorProperty
tulip.tlp.Graph.getGraphProperty?4(string) -> tlp.GraphProperty
tulip.tlp.Graph.getLocalGraphProperty?4(string) -> tlp.GraphProperty
tulip.tlp.Graph.getProperty?4(string) -> tlp.PropertyInterface
tulip.tlp.Graph.existProperty?4(string) -> bool
tulip.tlp.Graph.existLocalProperty?4(string) -> bool
tulip.tlp.Graph.delLocalProperty?4(string)
tulip.tlp.Graph.getLocalProperties?4() -> tlp.IteratorString
tulip.tlp.Graph.getInheritedProperties?4() -> tlp.IteratorString
tulip.tlp.Graph.getProperties?4() -> tlp.IteratorString
tulip.tlp.Graph.computeIntegerProperty?4(string, tlp.IntegerProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applyIntegerAlgorithm?4(string, tlp.IntegerProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.computeDoubleProperty?4(string, tlp.DoubleProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applyDoubleAlgorithm?4(string, tlp.DoubleProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.computeLayoutProperty?4(string, tlp.LayoutProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applyLayoutAlgorithm?4(string, tlp.LayoutProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.computeBooleanProperty?4(string, tlp.BooleanProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applyBooleanAlgorithm?4(string, tlp.BooleanProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.computeSizeProperty?4(string, tlp.SizeProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applySizeAlgorithm?4(string, tlp.SizeProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.computeColorProperty?4(string, tlp.ColorProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applyColorAlgorithm?4(string, tlp.ColorProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.computeStringProperty?4(string, tlp.StringProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.applyStringAlgorithm?4(string, tlp.StringProperty, tlp.DataSet data=None) -> (bool, string)
tulip.tlp.Graph.addGraphObserver?4(tlp.GraphObserver)
tulip.tlp.Graph.countGraphObservers?4() -> int
tulip.tlp.Graph.removeGraphObserver?4(tlp.GraphObserver)
tulip.tlp.Graph.push?4(bool unpopAllowed=True, list-of-tlp.PropertyInterface propertiesToPreserveOnPop=None)
tulip.tlp.Graph.pop?4(bool unpopAllowed=True)
tulip.tlp.Graph.unpop?4()
tulip.tlp.Graph.canPop?4() -> bool
tulip.tlp.Graph.canUnpop?4() -> bool
tulip.tlp.Graph.canPopThenUnpop?4() -> bool
tulip.tlp.Graph.createMetaNode?4(list-of-tlp.node, bool multiEdges=True, bool delAllEdge=True) -> tlp.node
tulip.tlp.Graph.createMetaNode?4(tlp.Graph, bool multiEdges=True, bool delAllEdge=True) -> tlp.node
tulip.tlp.Graph.createMetaNodes?4(tlp.IteratorGraph, tlp.Graph) -> list-of-tlp.node
tulip.tlp.Graph.openMetaNode?4(tlp.node, bool updateProperties=True)
tulip.tlp.Graph.getName?4() -> string
tulip.tlp.Graph.setName?4(string)
tulip.tlp.Graph.setAttribute?4(string, object)
tulip.tlp.Graph.getAttribute?4(string) -> object
tulip.tlp.PluginLoader?1()
tulip.tlp.PluginLoader.__init__?1(self)
tulip.tlp.PluginLoader?1(tlp.PluginLoader)
tulip.tlp.PluginLoader.__init__?1(self, tlp.PluginLoader)
tulip.tlp.PluginLoader.start?4(string, string)
tulip.tlp.PluginLoader.numberOfFiles?4(int)
tulip.tlp.PluginLoader.loading?4(string)
tulip.tlp.PluginLoader.loaded?4(string, string, string, string, string, string, list-of-tlp.Dependency)
tulip.tlp.PluginLoader.aborted?4(string, string)
tulip.tlp.PluginLoader.finished?4(bool, string)
tulip.tlp.SelfLoops.e1?7
tulip.tlp.SelfLoops.e2?7
tulip.tlp.SelfLoops.e3?7
tulip.tlp.SelfLoops.n1?7
tulip.tlp.SelfLoops.n2?7
tulip.tlp.SelfLoops.old?7
tulip.tlp.SelfLoops?1(tlp.node, tlp.node, tlp.edge, tlp.edge, tlp.edge, tlp.edge)
tulip.tlp.SelfLoops.__init__?1(self, tlp.node, tlp.node, tlp.edge, tlp.edge, tlp.edge, tlp.edge)
tulip.tlp.SelfLoops?1(tlp.SelfLoops)
tulip.tlp.SelfLoops.__init__?1(self, tlp.SelfLoops)
tulip.tlp.AcyclicTest?1(tlp.AcyclicTest)
tulip.tlp.AcyclicTest.__init__?1(self, tlp.AcyclicTest)
tulip.tlp.AcyclicTest.isAcyclic?4(tlp.Graph) -> bool
tulip.tlp.AcyclicTest.makeAcyclic?4(tlp.Graph) -> (list-of-tlp.edge, list-of-tlp.SelfLoops)
tulip.tlp.AcyclicTest.acyclicTest?4(tlp.Graph) -> (bool, list-of-tlp.edge)
tulip.tlp.ConnectedTest?1(tlp.ConnectedTest)
tulip.tlp.ConnectedTest.__init__?1(self, tlp.ConnectedTest)
tulip.tlp.ConnectedTest.isConnected?4(tlp.Graph) -> bool
tulip.tlp.ConnectedTest.makeConnected?4(tlp.Graph) -> list-of-tlp.edge
tulip.tlp.ConnectedTest.numberOfConnectedComponents?4(tlp.Graph) -> int
tulip.tlp.ConnectedTest.computeConnectedComponents?4(tlp.Graph) -> list-of-std_set_0100tlp_node
tulip.tlp.SimpleTest?1(tlp.SimpleTest)
tulip.tlp.SimpleTest.__init__?1(self, tlp.SimpleTest)
tulip.tlp.SimpleTest.isSimple?4(tlp.Graph) -> bool
tulip.tlp.SimpleTest.makeSimple?4(tlp.Graph) -> list-of-tlp.edge
tulip.tlp.SimpleTest.simpleTest?4(tlp.Graph) -> (bool, list-of-tlp.edge, list-of-tlp.edge)
tulip.tlp.TreeTest?1(tlp.TreeTest)
tulip.tlp.TreeTest.__init__?1(self, tlp.TreeTest)
tulip.tlp.TreeTest.isTree?4(tlp.Graph) -> bool
tulip.tlp.TreeTest.isFreeTree?4(tlp.Graph) -> bool
tulip.tlp.TreeTest.makeRootedTree?4(tlp.Graph, tlp.node)
tulip.tlp.TreeTest.computeTree?4(tlp.Graph) -> tlp.Graph
tulip.tlp.TreeTest.cleanComputedTree?4(tlp.Graph, tlp.Graph)
tulip.tlp.OuterPlanarTest?1(tlp.OuterPlanarTest)
tulip.tlp.OuterPlanarTest.__init__?1(self, tlp.OuterPlanarTest)
tulip.tlp.OuterPlanarTest.isOuterPlanar?4(tlp.Graph) -> bool
tulip.tlp.BiconnectedTest?1(tlp.BiconnectedTest)
tulip.tlp.BiconnectedTest.__init__?1(self, tlp.BiconnectedTest)
tulip.tlp.BiconnectedTest.isBiconnected?4(tlp.Graph) -> bool
tulip.tlp.BiconnectedTest.makeBiconnected?4(tlp.Graph) -> list-of-tlp.edge
tulip.tlp.TriconnectedTest?1(tlp.TriconnectedTest)
tulip.tlp.TriconnectedTest.__init__?1(self, tlp.TriconnectedTest)
tulip.tlp.TriconnectedTest.isTriconnected?4(tlp.Graph) -> bool
tulip.tlp.PlanarityTest?1(tlp.PlanarityTest)
tulip.tlp.PlanarityTest.__init__?1(self, tlp.PlanarityTest)
tulip.tlp.PlanarityTest.isPlanar?4(tlp.Graph) -> bool
tulip.tlp.PlanarityTest.isPlanarEmbedding?4(tlp.Graph) -> bool
tulip.tlp.PlanarityTest.planarEmbedding?4(tlp.Graph) -> bool
tulip.tlp.PlanarityTest.getObstructionsEdges?4(tlp.Graph) -> list-of-tlp.edge
tulip.tlp.Event.EventType?10
tulip.tlp.Event.TLP_DELETE?10
tulip.tlp.Event.TLP_MODIFICATION?10
tulip.tlp.Event.TLP_INFORMATION?10
tulip.tlp.Event.TLP_INVALID?10
tulip.tlp.Event?1(tlp.Observable, tlp.Event.EventType)
tulip.tlp.Event.__init__?1(self, tlp.Observable, tlp.Event.EventType)
tulip.tlp.Event?1(tlp.Event)
tulip.tlp.Event.__init__?1(self, tlp.Event)
tulip.tlp.Event.sender?4() -> tlp.Observable
tulip.tlp.Event.type?4() -> tlp.Event.EventType
tulip.tlp.GraphEvent.GraphEventType?10
tulip.tlp.GraphEvent.TLP_ADD_NODE?10
tulip.tlp.GraphEvent.TLP_DEL_NODE?10
tulip.tlp.GraphEvent.TLP_ADD_EDGE?10
tulip.tlp.GraphEvent.TLP_DEL_EDGE?10
tulip.tlp.GraphEvent.TLP_REVERSE_EDGE?10
tulip.tlp.GraphEvent.TLP_BEFORE_SET_ENDS?10
tulip.tlp.GraphEvent.TLP_AFTER_SET_ENDS?10
tulip.tlp.GraphEvent.TLP_ADD_NODES?10
tulip.tlp.GraphEvent.TLP_ADD_EDGES?10
tulip.tlp.GraphEvent.TLP_ADD_SUBGRAPH?10
tulip.tlp.GraphEvent.TLP_DEL_SUBGRAPH?10
tulip.tlp.GraphEvent.TLP_ADD_LOCAL_PROPERTY?10
tulip.tlp.GraphEvent.TLP_BEFORE_DEL_LOCAL_PROPERTY?10
tulip.tlp.GraphEvent.TLP_AFTER_DEL_LOCAL_PROPERTY?10
tulip.tlp.GraphEvent.TLP_ADD_INHERITED_PROPERTY?10
tulip.tlp.GraphEvent.TLP_BEFORE_DEL_INHERITED_PROPERTY?10
tulip.tlp.GraphEvent.TLP_AFTER_DEL_INHERITED_PROPERTY?10
tulip.tlp.GraphEvent.TLP_BEFORE_SET_ATTRIBUTE?10
tulip.tlp.GraphEvent.TLP_AFTER_SET_ATTRIBUTE?10
tulip.tlp.GraphEvent.TLP_REMOVE_ATTRIBUTE?10
tulip.tlp.GraphEvent?1(tlp.Graph, tlp.GraphEvent.GraphEventType, int, tlp.Event.EventType evtType=tlp.Event.TLP_MODIFICATION)
tulip.tlp.GraphEvent.__init__?1(self, tlp.Graph, tlp.GraphEvent.GraphEventType, int, tlp.Event.EventType evtType=tlp.Event.TLP_MODIFICATION)
tulip.tlp.GraphEvent?1(tlp.Graph, tlp.GraphEvent.GraphEventType, tlp.Graph)
tulip.tlp.GraphEvent.__init__?1(self, tlp.Graph, tlp.GraphEvent.GraphEventType, tlp.Graph)
tulip.tlp.GraphEvent?1(tlp.Graph, tlp.GraphEvent.GraphEventType, string, tlp.Event.EventType evtType=tlp.Event.TLP_MODIFICATION)
tulip.tlp.GraphEvent.__init__?1(self, tlp.Graph, tlp.GraphEvent.GraphEventType, string, tlp.Event.EventType evtType=tlp.Event.TLP_MODIFICATION)
tulip.tlp.GraphEvent?1(tlp.GraphEvent)
tulip.tlp.GraphEvent.__init__?1(self, tlp.GraphEvent)
tulip.tlp.GraphEvent.getGraph?4() -> tlp.Graph
tulip.tlp.GraphEvent.getNode?4() -> tlp.node
tulip.tlp.GraphEvent.getEdge?4() -> tlp.edge
tulip.tlp.GraphEvent.getSubGraph?4() -> tlp.Graph
tulip.tlp.GraphEvent.getAttributeName?4() -> string
tulip.tlp.GraphEvent.getPropertyName?4() -> string
tulip.tlp.GraphEvent.getType?4() -> tlp.GraphEvent.GraphEventType
tulip.tlp.NodeShape.NodeShapes?10
tulip.tlp.NodeShape.Billboard?10
tulip.tlp.NodeShape.ChristmasTree?10
tulip.tlp.NodeShape.Circle?10
tulip.tlp.NodeShape.Cone?10
tulip.tlp.NodeShape.Cross?10
tulip.tlp.NodeShape.Cube?10
tulip.tlp.NodeShape.CubeOutlined?10
tulip.tlp.NodeShape.CubeOutlinedTransparent?10
tulip.tlp.NodeShape.Cylinder?10
tulip.tlp.NodeShape.Diamond?10
tulip.tlp.NodeShape.GlowSphere?10
tulip.tlp.NodeShape.HalfCylinder?10
tulip.tlp.NodeShape.Hexagon?10
tulip.tlp.NodeShape.Pentagon?10
tulip.tlp.NodeShape.Ring?10
tulip.tlp.NodeShape.RoundedBox?10
tulip.tlp.NodeShape.Sphere?10
tulip.tlp.NodeShape.Square?10
tulip.tlp.NodeShape.Triangle?10
tulip.tlp.NodeShape.Window?10
tulip.tlp.EdgeShape.EdgeShapes?10
tulip.tlp.EdgeShape.Polyline?10
tulip.tlp.EdgeShape.BezierCurve?10
tulip.tlp.EdgeShape.CatmullRomCurve?10
tulip.tlp.EdgeShape.CubicBSplineCurve?10
tulip.tlp.EdgeExtrimityShape.EdgeExtremityShapes?10
tulip.tlp.EdgeExtrimityShape.None?10
tulip.tlp.EdgeExtrimityShape.Arrow?10
tulip.tlp.EdgeExtrimityShape.ChristmasTree?10
tulip.tlp.EdgeExtrimityShape.Circle?10
tulip.tlp.EdgeExtrimityShape.Cone?10
tulip.tlp.EdgeExtrimityShape.Cross?10
tulip.tlp.EdgeExtrimityShape.Cube?10
tulip.tlp.EdgeExtrimityShape.Cylinder?10
tulip.tlp.EdgeExtrimityShape.Diamond?10
tulip.tlp.EdgeExtrimityShape.GlowSphere?10
tulip.tlp.EdgeExtrimityShape.Hexagon?10
tulip.tlp.EdgeExtrimityShape.Pentagon?10
tulip.tlp.EdgeExtrimityShape.Ring?10
tulip.tlp.EdgeExtrimityShape.Sphere?10
tulip.tlp.EdgeExtrimityShape.Square?10
tulip.tlp.EdgeExtrimityShape.Triangle?10
tulip.tlp.LabelPosition.LabelPositions?10
tulip.tlp.LabelPosition.Center?10
tulip.tlp.LabelPosition.Top?10
tulip.tlp.LabelPosition.Bottom?10
tulip.tlp.LabelPosition.Left?10
tulip.tlp.LabelPosition.Right?10
tulip.tlp.VoronoiDiagram?1()
tulip.tlp.VoronoiDiagram.__init__?1(self)
tulip.tlp.VoronoiDiagram?1(tlp.VoronoiDiagram)
tulip.tlp.VoronoiDiagram.__init__?1(self, tlp.VoronoiDiagram)
