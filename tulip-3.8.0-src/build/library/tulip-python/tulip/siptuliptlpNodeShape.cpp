/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.13.2 on Fri Apr 26 16:33:30 2013
 */

#include "sipAPItulip.h"

#line 28 "/home/kdbanman/Desktop/tulip-3.8.0-src/library/tulip-python/tulip/WithParameter.sip"
#include <tulip/WithParameter.h>
#include <tulip/ColorScale.h>
#include <tulip/StringCollection.h>
#include <tulip/IntegerProperty.h>
#include <tulip/LayoutProperty.h>
#include <tulip/SizeProperty.h>
#include <tulip/DoubleProperty.h>
#include <tulip/BooleanProperty.h>
#include <tulip/ColorProperty.h>
#line 28 "/home/kdbanman/Desktop/tulip-3.8.0-src/library/tulip-python/tulip/WithDependency.sip"
#include <tulip/WithDependency.h>
#line 31 "/home/kdbanman/Desktop/tulip-3.8.0-src/library/tulip-python/tulip/PluginProgress.sip"
#include <tulip/PluginProgress.h>
#line 24 "/home/kdbanman/Desktop/tulip-3.8.0-src/build/library/tulip-python/tulip/siptuliptlpNodeShape.cpp"



/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_tlp_NodeShape(void *, const sipTypeDef *);}
static void *cast_tlp_NodeShape(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_tlp_NodeShape)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_tlp_NodeShape(void *, int);}
static void release_tlp_NodeShape(void *sipCppV,int)
{
    delete reinterpret_cast<tlp::NodeShape *>(sipCppV);
}


extern "C" {static void dealloc_tlp_NodeShape(sipSimpleWrapper *);}
static void dealloc_tlp_NodeShape(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_tlp_NodeShape(sipGetAddress(sipSelf),0);
    }
}

static sipEnumMemberDef enummembers_tlp_NodeShape[] = {
    {sipName_Billboard, tlp::NodeShape::Billboard, 77},
    {sipName_ChristmasTree, tlp::NodeShape::ChristmasTree, 77},
    {sipName_Circle, tlp::NodeShape::Circle, 77},
    {sipName_Cone, tlp::NodeShape::Cone, 77},
    {sipName_Cross, tlp::NodeShape::Cross, 77},
    {sipName_Cube, tlp::NodeShape::Cube, 77},
    {sipName_CubeOutlined, tlp::NodeShape::CubeOutlined, 77},
    {sipName_CubeOutlinedTransparent, tlp::NodeShape::CubeOutlinedTransparent, 77},
    {sipName_Cylinder, tlp::NodeShape::Cylinder, 77},
    {sipName_Diamond, tlp::NodeShape::Diamond, 77},
    {sipName_GlowSphere, tlp::NodeShape::GlowSphere, 77},
    {sipName_HalfCylinder, tlp::NodeShape::HalfCylinder, 77},
    {sipName_Hexagon, tlp::NodeShape::Hexagon, 77},
    {sipName_Pentagon, tlp::NodeShape::Pentagon, 77},
    {sipName_Ring, tlp::NodeShape::Ring, 77},
    {sipName_RoundedBox, tlp::NodeShape::RoundedBox, 77},
    {sipName_Sphere, tlp::NodeShape::Sphere, 77},
    {sipName_Square, tlp::NodeShape::Square, 77},
    {sipName_Triangle, tlp::NodeShape::Triangle, 77},
    {sipName_Window, tlp::NodeShape::Window, 77},
};


sipClassTypeDef sipTypeDef_tulip_tlp_NodeShape = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_tlp__NodeShape,
        {0}
    },
    {
        sipNameNr_NodeShape,
        {21, 255, 0},
        0, 0,
        20, enummembers_tlp_NodeShape,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_tlp_NodeShape,
    0,
    0,
    0,
    release_tlp_NodeShape,
    cast_tlp_NodeShape,
    0,
    0,
    0
};
