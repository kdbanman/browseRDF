/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.13.2 on Tue Apr 30 11:10:28 2013
 */

#include "sipAPIstl.h"

#line 6 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/stl/ostream.sip"
#include <iostream>
#line 12 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/stl/sipstlstdostream.cpp"



extern "C" {static PyObject *slot_std_ostream___lshift__(PyObject *,PyObject *);}
static PyObject *slot_std_ostream___lshift__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        std::ostream * a0;
        PyObject * a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J9P0", sipType_std_ostream, &a0, &a1))
        {
            std::ostream *sipRes = 0;

#line 13 "/home/kdbanman/browseRDF/tulip-3.8.0-src/library/tulip-python/stl/ostream.sip"
	PyObject *objStr = PyObject_Str(a1);
	PyObject *objRepr = PyObject_Repr(a1);
	if (objStr) {
#if PY_MAJOR_VERSION >= 3
        sipRes = &(*a0 << convertPythonUnicodeObjectToStdString(objStr));
#else
        sipRes = &(*a0 << PyString_AS_STRING(objStr));
#endif
	} else if (objRepr) {
#if PY_MAJOR_VERSION >= 3
        sipRes = &(*a0 << convertPythonUnicodeObjectToStdString(objRepr));
#else
        sipRes = &(*a0 << PyString_AS_STRING(objRepr));
#endif
	} else {
		sipRes = a0;
	}
	
	Py_XDECREF(objStr);
	Py_XDECREF(objRepr);
#line 50 "/home/kdbanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/stl/sipstlstdostream.cpp"

            return sipConvertFromType(sipRes,sipType_std_ostream,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_stl,lshift_slot,NULL,sipArg0,sipArg1);
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_std_ostream(void *, const sipTypeDef *);}
static void *cast_std_ostream(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_std_ostream)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_std_ostream(void *, int);}
static void release_std_ostream(void *sipCppV,int)
{
    delete reinterpret_cast<std::ostream *>(sipCppV);
}


extern "C" {static void dealloc_std_ostream(sipSimpleWrapper *);}
static void dealloc_std_ostream(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_std_ostream(sipGetAddress(sipSelf),0);
    }
}


/* Define this type's Python slots. */
static sipPySlotDef slots_std_ostream[] = {
    {(void *)slot_std_ostream___lshift__, lshift_slot},
    {0, (sipPySlotType)0}
};


sipClassTypeDef sipTypeDef_stl_std_ostream = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_std__ostream,
        {0}
    },
    {
        sipNameNr_ostream,
        {0, 255, 0},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    slots_std_ostream,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_std_ostream,
    0,
    0,
    0,
    release_std_ostream,
    cast_std_ostream,
    0,
    0,
    0
};
