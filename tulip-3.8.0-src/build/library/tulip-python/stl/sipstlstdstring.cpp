/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.13.2 on Mon Apr 29 01:46:05 2013
 */

#include "sipAPIstl.h"

#line 29 "/home/kirbybanman/browseRDF/tulip-3.8.0-src/library/tulip-python/stl/string.sip"
	// Include the library interface to the type being mapped.
#include <string>
#line 13 "/home/kirbybanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/stl/sipstlstdstring.cpp"



extern "C" {static void assign_std_string(void *, SIP_SSIZE_T, const void *);}
static void assign_std_string(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<std::string *>(sipDst)[sipDstIdx] = *reinterpret_cast<const std::string *>(sipSrc);
}


extern "C" {static void *array_std_string(SIP_SSIZE_T);}
static void *array_std_string(SIP_SSIZE_T sipNrElem)
{
    return new std::string[sipNrElem];
}


extern "C" {static void *copy_std_string(const void *, SIP_SSIZE_T);}
static void *copy_std_string(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new std::string(reinterpret_cast<const std::string *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_std_string(void *, int);}
static void release_std_string(void *ptr, int)
{
    delete reinterpret_cast<std::string *>(ptr);
}



extern "C" {static int convertTo_std_string(PyObject *, void **, int *, PyObject *);}
static int convertTo_std_string(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *)
{
    std::string **sipCppPtr = reinterpret_cast<std::string **>(sipCppPtrV);

#line 34 "/home/kirbybanman/browseRDF/tulip-3.8.0-src/library/tulip-python/stl/string.sip"
	if (sipIsErr == NULL) {
#if PY_MAJOR_VERSION >= 3
        return PyUnicode_Check(sipPy);
#else
		return PyString_Check(sipPy);
#endif
	}

	if (sipPy == Py_None) {
		*sipCppPtr = new std::string;
		return 1;
	}
#if PY_MAJOR_VERSION >= 3
    *sipCppPtr = new std::string(convertPythonUnicodeObjectToStdString(sipPy));
#else
    *sipCppPtr = new std::string(PyString_AS_STRING(sipPy));
#endif
	return 1;
#line 71 "/home/kirbybanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/stl/sipstlstdstring.cpp"
}


extern "C" {static PyObject *convertFrom_std_string(void *, PyObject *);}
static PyObject *convertFrom_std_string(void *sipCppV,PyObject *)
{
   std::string *sipCpp = reinterpret_cast<std::string *>(sipCppV);

#line 55 "/home/kirbybanman/browseRDF/tulip-3.8.0-src/library/tulip-python/stl/string.sip"
#if PY_MAJOR_VERSION >= 3
    PyObject *obj = PyUnicode_FromString(sipCpp->c_str());
#else
    PyObject *obj = PyString_FromString(sipCpp->c_str());
#endif
	return obj;
#line 87 "/home/kirbybanman/browseRDF/tulip-3.8.0-src/build/library/tulip-python/stl/sipstlstdstring.cpp"
}


sipMappedTypeDef sipTypeDef_stl_std_string = {
    {
        -1,
        0,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_std__string,
        {0}
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_std_string,
    array_std_string,
    copy_std_string,
    release_std_string,
    convertTo_std_string,
    convertFrom_std_string
};
