CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(sip)

FIND_PACKAGE(PythonInterp REQUIRED)
IF(PYTHONINTERP_FOUND)
    EXECUTE_PROCESS(COMMAND ${PYTHON_EXECUTABLE} --version
                    ERROR_VARIABLE PYTHON_VERSION_RAW)
    STRING(REPLACE "\n" "" PYTHON_VERSION_RAW "${PYTHON_VERSION_RAW}")
    STRING(REGEX MATCH "[0-9]\\.[0-9]"
           PYTHON_VERSION "${PYTHON_VERSION_RAW}")

    # Find the Python library with the same version as the interpreter
    # Starting Python 3.2, the library is suffixed by mu, also handle that case
    SET(Python_ADDITIONAL_VERSIONS ${PYTHON_VERSION}mu ${PYTHON_VERSION})
    FIND_PACKAGE(PythonLibs REQUIRED)
ENDIF(PYTHONINTERP_FOUND)

IF (PYTHONLIBS_FOUND AND PYTHONINTERP_FOUND)   					

INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIR} ${PYTHON_INCLUDE_PATH})

SET(sip_SRCS
    export.c
    extracts.c
    gencode.c
    heap.c
    lexer.c
    main.c
    parser.c
    transform.c
	${CMAKE_CURRENT_SOURCE_DIR}/../siplib/sip.h
)

IF(MSVC)
    STRING(REGEX REPLACE "/W[0-9]" "/W0" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    STRING(REGEX REPLACE "/W[0-9]" "/W0" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
ELSE(MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w ")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -w ")
ENDIF(MSVC)

ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/../siplib/sip.h
                   COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/../configure.py 
							-b ${CMAKE_CURRENT_BINARY_DIR}/../sipgen -e ${CMAKE_CURRENT_SOURCE_DIR}/../siplib
							-d ${CMAKE_CURRENT_BINARY_DIR}/../siplib
                     
                   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../siplib/sip.h.in
				   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..)

ADD_EXECUTABLE(sip ${sip_SRCS})

ENDIF(PYTHONLIBS_FOUND AND PYTHONINTERP_FOUND)

