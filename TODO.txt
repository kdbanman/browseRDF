- flow chart of how tulip view graph would interact with rdflib model graph from node explore event.  roughly:
    - uri field in tulip node sent to rdflib to query
    - rdflib retrieves, parses, adds to model, and sends an rdflib Graph()
        - not a tlp.Graph(), the model should be visualization-independent
    - window is created for the new graph, the contents are made pretty
    - the displayed tulip graph is very much a part of the controller, since it is the structure that the user uses to choose queries and update the view
    - user selects node(s), shortest path to any aggregated nodes calculated by tulip and they are selected automatically
    - node selection observer adds to aggregated view
    - upon window close, all unselected nodes and edges are removed from model
        - just leave the unselected triples in the model.  history is important, and we have disk storage natively in rdflib
- outline architecture in Dia
    - ... <--> {data} <--> [component] <--> {data} <--> [component] ...
    - differentiate between data requests and data sends?
